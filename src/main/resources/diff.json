[
  {
    "path": "/messages/LangBundle.properties",
    "name": "LangBundle.properties",
    "props": [
      {
        "key": "java.terms.annotation.interface",
        "cnValue": "@interface",
        "enValue": "@interface"
      },
      {
        "key": "jrt.node.short",
        "cnValue": "[JRT]",
        "enValue": "[JRT]"
      }
    ]
  },
  {
    "path": "/org/intellij/images/ImagesBundle.properties",
    "name": "ImagesBundle.properties",
    "props": [
      {
        "key": "icon.dimensions",
        "cnValue": "{0,number}x{1,number}x{2,number}",
        "enValue": "{0,number}x{1,number}x{2,number}"
      },
      {
        "key": "image.info",
        "cnValue": "{0}x{1} {2} ({3}-bit color) {4}",
        "enValue": "{0}x{1} {2} ({3}-bit color) {4}"
      }
    ]
  },
  {
    "path": "/messages/DaemonBundle.properties",
    "name": "DaemonBundle.properties",
    "props": [
      {
        "key": "import.popup.text",
        "cnValue": "{0}?",
        "enValue": "{0}?"
      }
    ]
  },
  {
    "path": "/messages/IdeBundle.properties",
    "name": "IdeBundle.properties",
    "props": [
      {
        "key": "run.anything.run.anything.title",
        "cnValue": "Run anything:",
        "enValue": "Run anything:"
      },
      {
        "key": "browsers.opera",
        "cnValue": "Opera",
        "enValue": "Opera"
      },
      {
        "key": "tab.structureview.baselanguage.view",
        "cnValue": "{0}",
        "enValue": "{0}"
      },
      {
        "key": "idea.dark.look.and.feel",
        "cnValue": "Darcula",
        "enValue": "Darcula"
      },
      {
        "key": "create.default.library.type.action.name",
        "cnValue": "Java",
        "enValue": "Java"
      },
      {
        "key": "about.box.vm",
        "cnValue": "JVM: {0} by {1}",
        "enValue": "JVM: {0} by {1}"
      },
      {
        "key": "run.anything.general.group.title",
        "cnValue": "General",
        "enValue": "General"
      },
      {
        "key": "run.anything.console.title",
        "cnValue": "Run anything command",
        "enValue": "Run anything command"
      },
      {
        "key": "label.plugin.vendor.email",
        "cnValue": "E-mail:",
        "enValue": "E-mail:"
      },
      {
        "key": "node.projectview.jdk",
        "cnValue": "JDK",
        "enValue": "JDK"
      },
      {
        "key": "idea.default.look.and.feel",
        "cnValue": "IDEA (4.5 default)",
        "enValue": "IDEA (4.5 default)"
      },
      {
        "key": "action.create.new.package-info.title",
        "cnValue": "package-info.java",
        "enValue": "package-info.java"
      },
      {
        "key": "browsers.chrome",
        "cnValue": "Chrome",
        "enValue": "Chrome"
      },
      {
        "key": "about.box.powered.by",
        "cnValue": "Powered by ",
        "enValue": "Powered by "
      },
      {
        "key": "searcheverywhere.allelements.tab.name",
        "cnValue": "All",
        "enValue": "All"
      },
      {
        "key": "go.to.class.kind.text",
        "cnValue": "class",
        "enValue": "class"
      },
      {
        "key": "browsers.safari",
        "cnValue": "Safari",
        "enValue": "Safari"
      },
      {
        "key": "idea.intellij.look.and.feel",
        "cnValue": "IntelliJ",
        "enValue": "IntelliJ"
      },
      {
        "key": "about.box.jre",
        "cnValue": "JRE: {0} {1}",
        "enValue": "JRE: {0} {1}"
      },
      {
        "key": "run.anything.custom.activity.notification.group.id",
        "cnValue": "Run Anything",
        "enValue": "Run Anything"
      },
      {
        "key": "label.text.antialiasing.scope.ide",
        "cnValue": "IDE:",
        "enValue": "IDE:"
      },
      {
        "key": "browsers.explorer",
        "cnValue": "Internet Explorer",
        "enValue": "Internet Explorer"
      },
      {
        "key": "browsers.firefox",
        "cnValue": "Firefox",
        "enValue": "Firefox"
      },
      {
        "key": "action.create.new.module-info.title",
        "cnValue": "module-info.java",
        "enValue": "module-info.java"
      },
      {
        "key": "tab.structureview.jsp.view",
        "cnValue": "JSP",
        "enValue": "JSP"
      },
      {
        "key": "title.todo",
        "cnValue": "TODO",
        "enValue": "TODO"
      },
      {
        "key": "action.compact.directories.text",
        "cnValue": "Compact Directories",
        "enValue": "Compact Directories"
      }
    ]
  },
  {
    "path": "/messages/RefactoringBundle.properties",
    "name": "RefactoringBundle.properties",
    "props": [
      {
        "key": "encapsulate.fields.field.column.name",
        "cnValue": "Field",
        "enValue": "Field"
      },
      {
        "key": "interface.description",
        "cnValue": "interface {0}",
        "enValue": "interface {0}"
      },
      {
        "key": "refactoring.extract.method.dialog.duplicates.count",
        "cnValue": "{0,choice, 1#One|2#{0,number}} duplicate code {0,choice, 1#fragment|2#fragments} can be replaced with the extracted method call",
        "enValue": "{0,choice, 1#One|2#{0,number}} duplicate code {0,choice, 1#fragment|2#fragments} can be replaced with the extracted method call"
      },
      {
        "key": "encapsulate.fields.setter.column.name",
        "cnValue": "Setter",
        "enValue": "Setter"
      },
      {
        "key": "auto.rename.module.entity",
        "cnValue": "Java Module",
        "enValue": "Java Module"
      },
      {
        "key": "extractSuperInterface.javadoc",
        "cnValue": "JavaDoc",
        "enValue": "JavaDoc"
      },
      {
        "key": "encapsulate.fields.getter.column.name",
        "cnValue": "Getter",
        "enValue": "Getter"
      },
      {
        "key": "occurences.string",
        "cnValue": "({0,choice,1#1 occurrence|2#{0,number} occurrences})",
        "enValue": "({0,choice,1#1 occurrence|2#{0,number} occurrences})"
      },
      {
        "key": "occurrences.string",
        "cnValue": "({0,choice,1#1 occurrence|2#{0,number} occurrences})",
        "enValue": "({0,choice,1#1 occurrence|2#{0,number} occurrences})"
      },
      {
        "key": "generate.module.descriptors.rebuild.message",
        "cnValue": "The project needs to be built for better accuracy of dependencies calculation. \nStart the build before generating module-info descriptors?",
        "enValue": "The project needs to be built for better accuracy of dependencies calculation. \nStart the build before generating module-info descriptors?"
      }
    ]
  },
  {
    "path": "/messages/XmlErrorMessages.properties",
    "name": "XmlErrorMessages.properties",
    "props": [
      {
        "key": "dtd.parser.message.name.or.entity.ref.expected",
        "cnValue": "XML name or entity ref expected",
        "enValue": "XML name or entity ref expected"
      },
      {
        "key": "dtd.parser.message.literal.public.system.expected",
        "cnValue": "Literal, PUBLIC or SYSTEM expected",
        "enValue": "Literal, PUBLIC or SYSTEM expected"
      },
      {
        "key": "dtd.parser.message.rbrace.expected",
        "cnValue": ") expected",
        "enValue": ") expected"
      },
      {
        "key": "dtd.parser.message.left.paren.or.entityref.or.empty.or.any.expected",
        "cnValue": "( or entity ref or EMPTY or ANY expected",
        "enValue": "( or entity ref or EMPTY or ANY expected"
      }
    ]
  },
  {
    "path": "/messages/OptionsBundle.properties",
    "name": "OptionsBundle.properties",
    "props": [
      {
        "key": "configurable.group.other.settings.weight",
        "cnValue": "-10",
        "enValue": "-10"
      },
      {
        "key": "options.java.attribute.descriptor.static.final.imported.field",
        "cnValue": "Class Fields//Constant (static final imported field)",
        "enValue": "Class Fields//Constant (static final imported field)"
      },
      {
        "key": "exportable.XmlSettings.presentable.name",
        "cnValue": "XML",
        "enValue": "XML"
      },
      {
        "key": "configurable.group.build.tools.settings.parent",
        "cnValue": "build",
        "enValue": "build"
      },
      {
        "key": "title.for.new.projects",
        "cnValue": "{0} for New {1}s",
        "enValue": "{0} for New {1}s"
      },
      {
        "key": "configurable.group.editor.settings.help.topic",
        "cnValue": "configurable.group.editor.help.topic",
        "enValue": "configurable.group.editor.help.topic"
      },
      {
        "key": "configurable.group.root.settings.display.name",
        "cnValue": "ROOT GROUP",
        "enValue": "ROOT GROUP"
      },
      {
        "key": "options.language.defaults.reassigned.local.variable",
        "cnValue": "Identifiers//Reassigned local variable",
        "enValue": "Identifiers//Reassigned local variable"
      },
      {
        "key": "configurable.group.project.settings.weight",
        "cnValue": "40",
        "enValue": "40"
      },
      {
        "key": "options.general.color.descriptor.console.debug",
        "cnValue": "Log Console//Debug",
        "enValue": "Log Console//Debug"
      },
      {
        "key": "options.general.color.descriptor.highlighted.folding.border",
        "cnValue": "Text//Folded text with highlighting",
        "enValue": "Text//Folded text with highlighting"
      },
      {
        "key": "options.jsp.display.name",
        "cnValue": "JSP",
        "enValue": "JSP"
      },
      {
        "key": "options.general.color.descriptor.console.info",
        "cnValue": "Log Console//Info",
        "enValue": "Log Console//Info"
      },
      {
        "key": "exportable.MultiLanguageDuplocatorSettings.presentable.name",
        "cnValue": "Duplocator",
        "enValue": "Duplocator"
      },
      {
        "key": "options.java.display.name",
        "cnValue": "Java",
        "enValue": "Java"
      },
      {
        "key": "configurable.group.build.tools.settings.weight",
        "cnValue": "1000",
        "enValue": "1000"
      },
      {
        "key": "options.java.attribute.descriptor.runtime",
        "cnValue": "Errors and Warnings//Runtime problem",
        "enValue": "Errors and Warnings//Runtime problem"
      },
      {
        "key": "options.java.attribute.descriptor.static.imported.field",
        "cnValue": "Class Fields//Static imported field",
        "enValue": "Class Fields//Static imported field"
      },
      {
        "key": "configurable.group.build.settings.help.topic",
        "cnValue": "configurable.group.build.help.topic",
        "enValue": "configurable.group.build.help.topic"
      },
      {
        "key": "exportable.DuplocatorSettings.presentable.name",
        "cnValue": "Duplocator",
        "enValue": "Duplocator"
      },
      {
        "key": "configurable.group.appearance.settings.help.topic",
        "cnValue": "configurable.group.appearance.help.topic",
        "enValue": "configurable.group.appearance.help.topic"
      },
      {
        "key": "configurable.group.editor.settings.weight",
        "cnValue": "60",
        "enValue": "60"
      },
      {
        "key": "exportable.TodoConfiguration.presentable.name",
        "cnValue": "Todo",
        "enValue": "Todo"
      },
      {
        "key": "exportable.CodeInsightSettings.presentable.name",
        "cnValue": "CodeInsight",
        "enValue": "CodeInsight"
      },
      {
        "key": "options.java.attribute.descriptor.method.imported.call",
        "cnValue": "Methods//Static imported method call",
        "enValue": "Methods//Static imported method call"
      },
      {
        "key": "configurable.group.language.settings.help.topic",
        "cnValue": "configurable.group.language.help.topic",
        "enValue": "configurable.group.language.help.topic"
      },
      {
        "key": "exportable.EmmetOptions.presentable.name",
        "cnValue": "Emmet",
        "enValue": "Emmet"
      },
      {
        "key": "options.html.display.name",
        "cnValue": "HTML",
        "enValue": "HTML"
      },
      {
        "key": "configurable.group.tools.settings.weight",
        "cnValue": "10",
        "enValue": "10"
      },
      {
        "key": "exportable.VcsApplicationSettings.presentable.name",
        "cnValue": "VCS",
        "enValue": "VCS"
      },
      {
        "key": "configurable.group.build.settings.weight",
        "cnValue": "30",
        "enValue": "30"
      },
      {
        "key": "options.java.attribute.descriptor.inline.parameter.hint.current",
        "cnValue": "Inline parameter hints//Current",
        "enValue": "Inline parameter hints//Current"
      },
      {
        "key": "options.language.defaults.reassigned.parameter",
        "cnValue": "Identifiers//Reassigned parameter",
        "enValue": "Identifiers//Reassigned parameter"
      },
      {
        "key": "options.xml.display.name",
        "cnValue": "XML",
        "enValue": "XML"
      },
      {
        "key": "configurable.group.appearance.settings.weight",
        "cnValue": "70",
        "enValue": "70"
      },
      {
        "key": "configurable.group.tools.settings.help.topic",
        "cnValue": "configurable.group.tools.help.topic",
        "enValue": "configurable.group.tools.help.topic"
      },
      {
        "key": "options.java.attribute.descriptor.smart.step.into.target",
        "cnValue": "Smart step into target",
        "enValue": "Smart step into target"
      },
      {
        "key": "configurable.group.language.settings.weight",
        "cnValue": "20",
        "enValue": "20"
      },
      {
        "key": "options.general.color.descriptor.console.verbose",
        "cnValue": "Log Console//Verbose",
        "enValue": "Log Console//Verbose"
      }
    ]
  },
  {
    "path": "/messages/FeatureStatisticsBundle.properties",
    "name": "FeatureStatisticsBundle.properties",
    "props": [
      {
        "key": "feature.statistics.not.applicable",
        "cnValue": "N/A",
        "enValue": "N/A"
      }
    ]
  },
  {
    "path": "/messages/SSRBundle.properties",
    "name": "SSRBundle.properties",
    "props": [
      {
        "key": "predefined.configuration.ejb.interface",
        "cnValue": "ejb interface",
        "enValue": "ejb interface"
      },
      {
        "key": "predefined.configuration.deprecated.methods",
        "cnValue": "deprecated methods",
        "enValue": "deprecated methods"
      },
      {
        "key": "predefined.configuration.lambdas",
        "cnValue": "lambdas",
        "enValue": "lambdas"
      },
      {
        "key": "predefined.configuration.entity.ejb",
        "cnValue": "entity ejb",
        "enValue": "entity ejb"
      },
      {
        "key": "var.constraints.reference.target.constraints.border",
        "cnValue": "Reference target constraints",
        "enValue": "Reference target constraints"
      },
      {
        "key": "predefined.configuration.block.dcls",
        "cnValue": "block dcls",
        "enValue": "block dcls"
      },
      {
        "key": "search.script.problem",
        "cnValue": "Structural Search script threw an exception: {0}",
        "enValue": "Structural Search script threw an exception: {0}"
      },
      {
        "key": "predefined.configuration.instanceof",
        "cnValue": "instanceof",
        "enValue": "instanceof"
      },
      {
        "key": "inspection.template.problem",
        "cnValue": "Structural Search inspection problem in template ''{0}''",
        "enValue": "Structural Search inspection problem in template ''{0}''"
      },
      {
        "key": "predefined.configuration.servlets",
        "cnValue": "servlets",
        "enValue": "servlets"
      },
      {
        "key": "error.argument.expected",
        "cnValue": "Argument expected on ''{0}'' constraint",
        "enValue": "Argument expected on ''{0}'' constraint"
      },
      {
        "key": "min.occurs.tooltip.message",
        "cnValue": "min occurs: {0}, max occurs: {1}",
        "enValue": "min occurs: {0}, max occurs: {1}"
      },
      {
        "key": "predefined.configuration.struts.1.1.actions",
        "cnValue": "Struts 1.1 actions",
        "enValue": "Struts 1.1 actions"
      },
      {
        "key": "inspection.script.problem",
        "cnValue": "{0}\n In Structural Search inspection template ''{1}''",
        "enValue": "{0}\n In Structural Search inspection template ''{1}''"
      },
      {
        "key": "predefined.configuration.session.ejb",
        "cnValue": "session ejb",
        "enValue": "session ejb"
      },
      {
        "key": "reference.target.tooltip.message",
        "cnValue": "reference target{0} like: {1}",
        "enValue": "reference target{0} like: {1}"
      },
      {
        "key": "error.empty.quantifier",
        "cnValue": "Empty quantifier",
        "enValue": "Empty quantifier"
      },
      {
        "key": "predefined.configuration.try.without.resources",
        "cnValue": "try statements without resources and catch blocks",
        "enValue": "try statements without resources and catch blocks"
      },
      {
        "key": "predefined.configuration.labeled.break",
        "cnValue": "labeled break statements",
        "enValue": "labeled break statements"
      },
      {
        "key": "predefined.configuration.deprecated.method.calls",
        "cnValue": "method calls to deprecated methods",
        "enValue": "method calls to deprecated methods"
      },
      {
        "key": "predefined.configuration.switch.with.branches",
        "cnValue": "switch statements with few branches",
        "enValue": "switch statements with few branches"
      },
      {
        "key": "predefined.configuration.classes.interfaces.enums",
        "cnValue": "classes, interfaces \\& enums",
        "enValue": "classes, interfaces \\& enums"
      },
      {
        "key": "error.expected.digit",
        "cnValue": "Digit expected",
        "enValue": "Digit expected"
      },
      {
        "key": "predefined.configuration.generic.constructors",
        "cnValue": "generic constructors",
        "enValue": "generic constructors"
      },
      {
        "key": "predefined.configuration.casts",
        "cnValue": "casts",
        "enValue": "casts"
      },
      {
        "key": "predefined.configuration.method.returns.bounded.wildcard",
        "cnValue": "method returns bounded wildcard",
        "enValue": "method returns bounded wildcard"
      },
      {
        "key": "search.template.problem",
        "cnValue": "Structural Search: {0}",
        "enValue": "Structural Search: {0}"
      },
      {
        "key": "predefined.configuration.switches",
        "cnValue": "switches",
        "enValue": "switches"
      }
    ]
  },
  {
    "path": "/messages/ExecutionBundle.properties",
    "name": "ExecutionBundle.properties",
    "props": [
      {
        "key": "run.dashboard.group.by.action.name",
        "cnValue": "Group By",
        "enValue": "Group By"
      },
      {
        "key": "junit.configuration.display.name",
        "cnValue": "JUnit",
        "enValue": "JUnit"
      },
      {
        "key": "applet.configuration.url.label",
        "cnValue": "&URL",
        "enValue": "&URL"
      },
      {
        "key": "junit.runing.info.failed.count.message",
        "cnValue": "F:{0}",
        "enValue": "F:{0}"
      },
      {
        "key": "empty.run.configuration.panel.text.label2",
        "cnValue": "<html><a href=\"add{1}\"><img src=\"{0}\" border=\"0\"></a></html>",
        "enValue": "<html><a href=\"add{1}\"><img src=\"{0}\" border=\"0\"></a></html>"
      },
      {
        "key": "junit.runing.info.errors.count.message",
        "cnValue": "E:{0}",
        "enValue": "E:{0}"
      },
      {
        "key": "run.configuration.jre.label",
        "cnValue": "&JRE:",
        "enValue": "&JRE:"
      },
      {
        "key": "junit.runing.info.ignored.count.message",
        "cnValue": "I:{0}",
        "enValue": "I:{0}"
      },
      {
        "key": "junit.running.info.status.completed.from.total",
        "cnValue": "{0} of {1}",
        "enValue": "{0} of {1}"
      },
      {
        "key": "applet.configuration.url.border",
        "cnValue": "URL",
        "enValue": "URL"
      },
      {
        "key": "junit.runing.info.passed.count.message",
        "cnValue": "P:{0}",
        "enValue": "P:{0}"
      }
    ]
  },
  {
    "path": "/com/intellij/spellchecker/util/SpellCheckerBundle.properties",
    "name": "SpellCheckerBundle.properties",
    "props": [
      {
        "key": "0.in.qoutes",
        "cnValue": "''{0}''",
        "enValue": "''{0}''"
      }
    ]
  },
  {
    "path": "/messages/XDebuggerBundle.properties",
    "name": "XDebuggerBundle.properties",
    "props": [
      {
        "key": "xdebugger.attach.action.description",
        "cnValue": "Attach to process with an available debugger",
        "enValue": "Attach to process with an available debugger"
      },
      {
        "key": "message.confirm.breakpoint.removal.message.log",
        "cnValue": "<br>log expression:<br><pre>{0}</pre>",
        "enValue": "<br>log expression:<br><pre>{0}</pre>"
      },
      {
        "key": "message.confirm.breakpoint.removal.title",
        "cnValue": "Confirm Removal",
        "enValue": "Confirm Removal"
      },
      {
        "key": "xdebugger.attach.action.collectingItems",
        "cnValue": "Collecting Attach Items...",
        "enValue": "Collecting Attach Items..."
      },
      {
        "key": "xbreakpoints.log.stack.checkbox",
        "cnValue": "Stac&k trace",
        "enValue": "Stac&k trace"
      },
      {
        "key": "message.confirm.breakpoint.removal.message.condition",
        "cnValue": "<br>condition:<br><pre>{0}</pre>",
        "enValue": "<br>condition:<br><pre>{0}</pre>"
      },
      {
        "key": "xdebugger.attach.toRemote.popup.title",
        "cnValue": "Show {0} processes",
        "enValue": "Show {0} processes"
      },
      {
        "key": "xdebugger.attach.host.popup.title",
        "cnValue": "View {0} processes",
        "enValue": "View {0} processes"
      },
      {
        "key": "xdebugger.attach.action.items.error.message",
        "cnValue": "Failed to get list of processes running on the host",
        "enValue": "Failed to get list of processes running on the host"
      },
      {
        "key": "debugger.hotswap.display.name",
        "cnValue": "HotSwap",
        "enValue": "HotSwap"
      },
      {
        "key": "settings.confirm.breakpoint.removal",
        "cnValue": "Confirm removal of conditional or logging breakpoints",
        "enValue": "Confirm removal of conditional or logging breakpoints"
      },
      {
        "key": "message.confirm.breakpoint.removal.message",
        "cnValue": "<html>Breakpoint contains",
        "enValue": "<html>Breakpoint contains"
      },
      {
        "key": "xdebugger.attach.popup.title.default",
        "cnValue": "Attach To",
        "enValue": "Attach To"
      },
      {
        "key": "xbreakpoints.restore.label",
        "cnValue": "Restore previous breakpoint",
        "enValue": "Restore previous breakpoint"
      },
      {
        "key": "xbreakpoint.tooltip.log.stack",
        "cnValue": "Log stack: yes",
        "enValue": "Log stack: yes"
      },
      {
        "key": "xdebugger.attach.popup.title",
        "cnValue": "Attach with {0} To",
        "enValue": "Attach with {0} To"
      },
      {
        "key": "xdebugger.attach.action.items.error.title",
        "cnValue": "Failed to get processes",
        "enValue": "Failed to get processes"
      },
      {
        "key": "xdebugger.attach.action",
        "cnValue": "Attach to Process...",
        "enValue": "Attach to Process..."
      }
    ]
  },
  {
    "path": "/com/intellij/json/JsonBundle.properties",
    "name": "JsonBundle.properties",
    "props": [
      {
        "key": "surround.with.object.literal.desc",
        "cnValue": "对象文字",
        "enValue": "object literal"
      },
      {
        "key": "json.template.context.type",
        "cnValue": "JSON",
        "enValue": "JSON"
      },
      {
        "key": "formatter.align.properties.on.colon",
        "cnValue": "在冒号",
        "enValue": "On colon"
      },
      {
        "key": "inspection.compliance.msg.single.quoted.strings",
        "cnValue": "JSON标准不允许使用单引号字符串",
        "enValue": "JSON standard does not allow single quoted strings"
      },
      {
        "key": "inspection.compliance.option.comments",
        "cnValue": "警告注释",
        "enValue": "Warn about comments"
      },
      {
        "key": "formatter.align.properties.none",
        "cnValue": "不要对齐",
        "enValue": "Do not align"
      },
      {
        "key": "json.copy.to.clipboard",
        "cnValue": "将{0}复制到剪贴板",
        "enValue": "Copy {0} to clipboard"
      },
      {
        "key": "syntax.error.illegal.floating.point.literal",
        "cnValue": "非法浮点字面量",
        "enValue": "Illegal floating point literal"
      },
      {
        "key": "inspection.compliance.option.nan.infinity",
        "cnValue": "警告 NaN和Infinity/-Infinity 数值",
        "enValue": "Warn about NaN and Infinity/-Infinity numeric values"
      },
      {
        "key": "inspection.compliance.msg.illegal.property.key",
        "cnValue": "JSON标准仅允许双引号字符串作为属性键",
        "enValue": "JSON standard allows only double quoted string as property key"
      },
      {
        "key": "settings.json.schema.add.mapping",
        "cnValue": "添加映射",
        "enValue": "Add mapping"
      },
      {
        "key": "inspection.compliance.msg.bad.token",
        "cnValue": "JSON标准不允许这样的标记",
        "enValue": "JSON standard does not allow such tokens"
      },
      {
        "key": "inspection.duplicate.keys.msg.duplicate.keys",
        "cnValue": "对象包含重复键 \"{0}\"",
        "enValue": "Object contains duplicate keys \"{0}\""
      },
      {
        "key": "inspection.duplicate.keys.name",
        "cnValue": "复制对象文字中的键",
        "enValue": "Duplicate keys in object literals"
      },
      {
        "key": "json.schema.inspection.compliance.name",
        "cnValue": "符合JSON模式",
        "enValue": "Compliance with JSON schema"
      },
      {
        "key": "formatter.align.properties.on.value",
        "cnValue": "在值",
        "enValue": "On value"
      },
      {
        "key": "inspection.compliance5.name",
        "cnValue": "符合JSON5标准",
        "enValue": "Compliance with JSON5 standard"
      },
      {
        "key": "json.array",
        "cnValue": "数组",
        "enValue": "array"
      },
      {
        "key": "syntax.error.illegal.escape.sequence",
        "cnValue": "Illegal escape sequence",
        "enValue": "Illegal escape sequence"
      },
      {
        "key": "syntax.error.missing.closing.quote",
        "cnValue": "缺少关闭符",
        "enValue": "Missing closing quote"
      },
      {
        "key": "json.object",
        "cnValue": "对象",
        "enValue": "object"
      },
      {
        "key": "inspection.compliance.msg.comments",
        "cnValue": "JSON标准不允许注释. 在解析之前使用JSMin或类似工具删除注释.",
        "enValue": "JSON standard does not allow comments. Use JSMin or similar tool to remove comments before parsing."
      },
      {
        "key": "json.schema.annotation.not.allowed.property",
        "cnValue": "不允许使用''{0}''属性",
        "enValue": "Property ''{0}'' is not allowed"
      },
      {
        "key": "inspection.compliance.msg.multiple.top.level.values",
        "cnValue": "JSON标准只允许一个顶级值",
        "enValue": "JSON standard allows only one top-level value"
      },
      {
        "key": "json.property",
        "cnValue": "属性",
        "enValue": "property"
      }
    ]
  },
  {
    "path": "/com/intellij/tasks/TaskBundle.properties",
    "name": "TaskBundle.properties",
    "props": [
      {
        "key": "youtrack.default.query",
        "cnValue": "for: me sort by: updated #Unresolved",
        "enValue": "for: me sort by: updated #Unresolved"
      }
    ]
  },
  {
    "path": "/messages/KeyMapBundle.properties",
    "name": "KeyMapBundle.properties",
    "props": [
      {
        "key": "dialog.mouse.pad.shortcut.text",
        "cnValue": "<html><center> <br>{0}<br><br>",
        "enValue": "<html><center> <br>{0}<br><br>"
      }
    ]
  },
  {
    "path": "/messages/ApplicationBundle.properties",
    "name": "ApplicationBundle.properties",
    "props": [
      {
        "key": "wrapping.try.resources",
        "cnValue": "'try-with-resources'",
        "enValue": "'try-with-resources'"
      },
      {
        "key": "label.use.custom.soft.wraps.indent",
        "cnValue": "Additional shift:",
        "enValue": "Additional shift:"
      },
      {
        "key": "editbox.ms",
        "cnValue": "ms",
        "enValue": "ms"
      },
      {
        "key": "combobox.force.braces.for",
        "cnValue": "for ():",
        "enValue": "for ():"
      },
      {
        "key": "combobox.force.braces.if",
        "cnValue": "if ():",
        "enValue": "if ():"
      },
      {
        "key": "settings.soft.margins.empty.list",
        "cnValue": "None",
        "enValue": "None"
      },
      {
        "key": "title.xml",
        "cnValue": "XML",
        "enValue": "XML"
      },
      {
        "key": "checkbox.collapse.data.uri",
        "cnValue": "Data URIs",
        "enValue": "Data URIs"
      },
      {
        "key": "ligatures.jre.warning",
        "cnValue": "<html>The JRE you are running {0} with is known to have performance issues related to ligatures support.<br>Use <a href=\"https://confluence.jetbrains.com/display/IDEADEV/JetBrains+Runtime+Environment\">JetBrains Runtime</a> instead to enable ligatures.",
        "enValue": "<html>The JRE you are running {0} with<br>is known to have performance issues<br>related to ligatures support.<br>Use <a href=\"https://confluence.jetbrains.com/display/IDEADEV/JetBrains+Runtime+Environment\">JetBrains Runtime</a> instead to enable ligatures."
      },
      {
        "key": "editbox.blanklines.before.class.end",
        "cnValue": "Before class end:",
        "enValue": "Before class end:"
      },
      {
        "key": "title.naming.functional.expressions",
        "cnValue": "Lambda Body",
        "enValue": "Lambda Body"
      },
      {
        "key": "combobox.force.braces.while",
        "cnValue": "while ():",
        "enValue": "while ():"
      },
      {
        "key": "combobox.crlf.mac",
        "cnValue": "Classic Mac (\\r)",
        "enValue": "Classic Mac (\\r)"
      },
      {
        "key": "combobox.force.braces.do.while",
        "cnValue": "do ... while():",
        "enValue": "do ... while():"
      },
      {
        "key": "editbox.scheme.type.name",
        "cnValue": "Scheme",
        "enValue": "Scheme"
      },
      {
        "key": "checkbox.collapse.suppress.warnings",
        "cnValue": "<html>@SuppressWarnings</html>",
        "enValue": "<html>@SuppressWarnings</html>"
      },
      {
        "key": "combobox.crlf.windows",
        "cnValue": "Windows (\\r\\n)",
        "enValue": "Windows (\\r\\n)"
      },
      {
        "key": "title.vcs",
        "cnValue": "VCS",
        "enValue": "VCS"
      },
      {
        "key": "wrapping.force.braces",
        "cnValue": "Force braces",
        "enValue": "Force braces"
      },
      {
        "key": "title.html",
        "cnValue": "HTML",
        "enValue": "HTML"
      },
      {
        "key": "integer.field.value.default",
        "cnValue": "Default",
        "enValue": "Default"
      },
      {
        "key": "title.javadoc",
        "cnValue": "JavaDoc",
        "enValue": "JavaDoc"
      }
    ]
  },
  {
    "path": "/messages/ProjectBundle.properties",
    "name": "ProjectBundle.properties",
    "props": [
      {
        "key": "module.javadoc.title",
        "cnValue": "JavaDoc",
        "enValue": "JavaDoc"
      },
      {
        "key": "dialog.text.enter.common.prefix.comment",
        "cnValue": "<html>Modules are grouped in the IDE accordingly to their names; <br>if names of several modules have a common prefix they will be shown together.</html>",
        "enValue": "<html>Modules are grouped in the IDE accordingly to their names; <br>if names of several modules have a common prefix they will be shown together.</html>"
      },
      {
        "key": "sdk.table.settings",
        "cnValue": "SDK Table",
        "enValue": "SDK Table"
      },
      {
        "key": "dialog.text.enter.common.prefix",
        "cnValue": "Specify prefix for names of {0} selected modules:",
        "enValue": "Specify prefix for names of {0} selected modules:"
      },
      {
        "key": "jdks.node.display.name",
        "cnValue": "SDKs",
        "enValue": "SDKs"
      },
      {
        "key": "project.roots.jdks.node.text",
        "cnValue": "JDK stands for the Java Development Kit, a software development package that is required to write, test and debug Java applications. JDK also contains classes and runtime environment that are used to execute the target application. <br><br>Mobile SDK contains emulator of mobile phone as well as embedded Java SDK to compile/pack/run/debug J2ME applications. <br><br>IntelliJ IDEA Plugin SDK contains idea's libraries and idea's embedded JRE to compile/pack/run/debug plugins for Intellij IDEA. <br><br>When you create a J2ME Module or Plugin Module, make sure that you have configured appropriate JDK for such a module.",
        "enValue": "JDK stands for the Java Development Kit, a software development package that is required to write, test and debug Java applications. JDK also contains classes and runtime environment that are used to execute the target application. <br><br>Mobile SDK contains emulator of mobile phone as well as embedded Java SDK to compile/pack/run/debug J2ME applications. <br><br>IntelliJ IDEA Plugin SDK contains idea's libraries and idea's embedded JRE to compile/pack/run/debug plugins for Intellij IDEA. <br><br>When you create a J2ME Module or Plugin Module, make sure that you have configured appropriate JDK for such a module."
      },
      {
        "key": "module.name.inspection.empty.name.is.not.allowed",
        "cnValue": "Empty module names aren't allowed",
        "enValue": "Empty module names aren't allowed"
      },
      {
        "key": "module.renaming.scheme.save.chooser.description",
        "cnValue": "Choose file where current module renaming scheme will be stored.",
        "enValue": "Choose file where current module renaming scheme will be stored."
      },
      {
        "key": "module.renaming.scheme.load.button.text",
        "cnValue": "&Load...",
        "enValue": "&Load..."
      },
      {
        "key": "module.name.inspection.too.few.lines",
        "cnValue": "There are {0} modules in the project but only {1} lines here",
        "enValue": "There are {0} modules in the project but only {1} lines here"
      },
      {
        "key": "convert.module.groups.record.previous.names.text",
        "cnValue": "&Record previous module names",
        "enValue": "&Record previous module names"
      },
      {
        "key": "convert.module.groups.dialog.title",
        "cnValue": "Convert Module Groups to Qualified Names",
        "enValue": "Convert Module Groups to Qualified Names"
      },
      {
        "key": "project.roots.flatten.modules.action.description",
        "cnValue": "Show modules in a flat list",
        "enValue": "Show modules in a flat list"
      },
      {
        "key": "module.renaming.scheme.unknown.module.error",
        "cnValue": "unknown module ''{0}''",
        "enValue": "unknown module ''{0}''"
      },
      {
        "key": "error.message.module.name.prefix.contains.invalid.chars",
        "cnValue": "A prefix must be composed of characters which can be used in a file name ",
        "enValue": "A prefix must be composed of characters which can be used in a file name "
      },
      {
        "key": "module.renaming.scheme.save.button.text",
        "cnValue": "&Save...",
        "enValue": "&Save..."
      },
      {
        "key": "project.roots.classpath.format.default.descr",
        "cnValue": "IntelliJ IDEA (.iml)",
        "enValue": "IntelliJ IDEA (.iml)"
      },
      {
        "key": "library.javadocs.node",
        "cnValue": "JavaDocs",
        "enValue": "JavaDocs"
      },
      {
        "key": "error.message.module.name.cannot.be.empty",
        "cnValue": "A module name cannot be empty",
        "enValue": "A module name cannot be empty"
      },
      {
        "key": "multiple.facets.banner.0.1.facets",
        "cnValue": "{0} {1} facets",
        "enValue": "{0} {1} facets"
      },
      {
        "key": "artifacts.add.copy.action",
        "cnValue": "Add Copy of",
        "enValue": "Add Copy of"
      },
      {
        "key": "jdk.combo.box.none.item",
        "cnValue": "<None>",
        "enValue": "<None>"
      },
      {
        "key": "action.description.change.module.names",
        "cnValue": "Adjust automatic grouping of modules by changing the common prefix for their names",
        "enValue": "Adjust automatic grouping of modules by changing the common prefix for their names"
      },
      {
        "key": "module.renaming.scheme.cannot.load.error",
        "cnValue": "Failed to load renaming scheme from {0}:\n{1}",
        "enValue": "Failed to load renaming scheme from {0}:\n{1}"
      },
      {
        "key": "facet.banner.text",
        "cnValue": "Facet ''{0}''",
        "enValue": "Facet ''{0}''"
      },
      {
        "key": "element.kind.name.facet",
        "cnValue": "facet",
        "enValue": "facet"
      },
      {
        "key": "convert.module.groups.error.at.text",
        "cnValue": "Error at line {0}: {1}",
        "enValue": "Error at line {0}: {1}"
      },
      {
        "key": "dialog.title.change.module.names",
        "cnValue": "Change Module Names",
        "enValue": "Change Module Names"
      },
      {
        "key": "choose.modules.dialog.description",
        "cnValue": "Library ''{0}'' will be added to the selected modules.",
        "enValue": "Library ''{0}'' will be added to the selected modules."
      },
      {
        "key": "module.unknown.type.multiple.error",
        "cnValue": "Cannot determine module type for the following modules:\n{0}\nAll mentioned modules will be treated as Unknown modules.",
        "enValue": "Cannot determine module type for the following modules:\n{0}\nAll mentioned modules will be treated as Unknown modules."
      },
      {
        "key": "jdk.missing.item",
        "cnValue": "<No SDK>",
        "enValue": "<No SDK>"
      },
      {
        "key": "project.roots.jdk.banner.text",
        "cnValue": "SDK ''{0}''",
        "enValue": "SDK ''{0}''"
      },
      {
        "key": "module.renaming.scheme.save.chooser.title",
        "cnValue": "Save Module Renaming Scheme",
        "enValue": "Save Module Renaming Scheme"
      },
      {
        "key": "sdk.java.name",
        "cnValue": "JDK",
        "enValue": "JDK"
      },
      {
        "key": "module.renaming.scheme.cannot.save.error",
        "cnValue": "Failed to save renaming scheme:\n{0}",
        "enValue": "Failed to save renaming scheme:\n{0}"
      },
      {
        "key": "module.name.inspection.duplicate.module.name",
        "cnValue": "Duplicate module name ''{0}''",
        "enValue": "Duplicate module name ''{0}''"
      },
      {
        "key": "module.name.inspection.display.name",
        "cnValue": "Module names validation",
        "enValue": "Module names validation"
      },
      {
        "key": "convert.module.groups.description.text",
        "cnValue": "Each line in the text below corresponds to a module. Adjust module names if needed and press 'Convert' to rename modules and discard module groups.",
        "enValue": "Each line in the text below corresponds to a module. Adjust module names if needed and press 'Convert' to rename modules and discard module groups."
      },
      {
        "key": "convert.module.groups.action.description",
        "cnValue": "Replace module groups by prefixes added to module names",
        "enValue": "Replace module groups by prefixes added to module names"
      },
      {
        "key": "module.name.inspection.too.many.lines",
        "cnValue": "There are {0} modules in the project so line {1} doesn''t correspond to a module",
        "enValue": "There are {0} modules in the project so line {1} doesn''t correspond to a module"
      },
      {
        "key": "error.message.module.name.prefix.contains.empty.string",
        "cnValue": "A prefix must be a sequence of words separated by dots",
        "enValue": "A prefix must be a sequence of words separated by dots"
      },
      {
        "key": "convert.module.groups.button.text",
        "cnValue": "Convert",
        "enValue": "Convert"
      },
      {
        "key": "external.annotations.suggestion.message",
        "cnValue": "<html><body>If you do not want annotations in your code you may use external storage.<br> To configure external annotations please specify root directory where files with annotations would be placed</body></html>",
        "enValue": "<html><body>If you do not want annotations in your code you may use external storage.<br> To configure external annotations please specify root directory where files with annotations would be placed</body></html>"
      },
      {
        "key": "convert.module.groups.do.you.want.to.save.scheme",
        "cnValue": "Do you want to save the current scheme?",
        "enValue": "Do you want to save the current scheme?"
      },
      {
        "key": "project.facets.display.name",
        "cnValue": "Facets",
        "enValue": "Facets"
      },
      {
        "key": "convert.module.groups.record.previous.names.tooltip",
        "cnValue": "All changes in module names will be recorded. {0} will use this data to automatically replace module names in workspace settings when other team members update the project from VCS.",
        "enValue": "All changes in module names will be recorded. {0} will use this data to automatically replace module names in workspace settings when other team members update the project from VCS."
      },
      {
        "key": "action.text.change.module.names",
        "cnValue": "Change Module Names...",
        "enValue": "Change Module Names..."
      },
      {
        "key": "project.roots.library.banner.text",
        "cnValue": "{1} ''{0}''",
        "enValue": "{1} ''{0}''"
      },
      {
        "key": "convert.module.groups.action.text",
        "cnValue": "Convert Module Groups to Qualified Names...",
        "enValue": "Convert Module Groups to Qualified Names..."
      },
      {
        "key": "module.renaming.scheme.cannot.import.error.title",
        "cnValue": "Cannot Import Module Names",
        "enValue": "Cannot Import Module Names"
      },
      {
        "key": "project.roots.javadoc.tab.description",
        "cnValue": "<html>Manage external JavaDocs attached to this module. External JavaDoc override JavaDoc annotations you might have in your module.</html>",
        "enValue": "<html>Manage external JavaDocs attached to this module. External JavaDoc override JavaDoc annotations you might have in your module.</html>"
      }
    ]
  },
  {
    "path": "/com/intellij/dvcs/ui/DvcsBundle.properties",
    "name": "DvcsBundle.properties",
    "props": [
      {
        "key": "clone.destination.directory.error.invalid",
        "cnValue": "Invalid directory path",
        "enValue": "Invalid directory path"
      },
      {
        "key": "clone.repository.url.autocomplete.login.tooltip",
        "cnValue": "Log in to see your repositories in the URL list",
        "enValue": "Log in to see your repositories in the URL list"
      },
      {
        "key": "clone.repository.url.test.success.message",
        "cnValue": "Connection successful",
        "enValue": "Connection successful"
      },
      {
        "key": "clone.repository.url.autocomplete.hint",
        "cnValue": "{0} repositories completion available ( {1} )",
        "enValue": "{0} repositories completion available ( {1} )"
      },
      {
        "key": "clone.repository.url.test.failed.message",
        "cnValue": "Repository test failed<br/>{0}",
        "enValue": "Repository test failed<br/>{0}"
      },
      {
        "key": "clone.destination.directory.browser.description",
        "cnValue": "Select a parent directory for the clone",
        "enValue": "Select a parent directory for the clone"
      },
      {
        "key": "clone.repository.url.label",
        "cnValue": "URL:",
        "enValue": "URL:"
      },
      {
        "key": "clone.repository.url.error.empty",
        "cnValue": "Empty repository URL",
        "enValue": "Empty repository URL"
      },
      {
        "key": "clone.repository.url.error.not.directory",
        "cnValue": "Repository URL is not a directory",
        "enValue": "Repository URL is not a directory"
      },
      {
        "key": "clone.repository.url.error.invalid",
        "cnValue": "Repository URL is a malformed URL or non-existent directory",
        "enValue": "Repository URL is a malformed URL or non-existent directory"
      },
      {
        "key": "clone.destination.directory.error.access",
        "cnValue": "Couldn't create destination directory<br/>Check your access rights",
        "enValue": "Couldn't create destination directory<br/>Check your access rights"
      },
      {
        "key": "clone.repository.url.test.title",
        "cnValue": "Testing {0}",
        "enValue": "Testing {0}"
      },
      {
        "key": "executable.path.project.override",
        "cnValue": "Set this path only for current project",
        "enValue": "Set this path only for current project"
      },
      {
        "key": "clone.repository.url.autocomplete.login.text",
        "cnValue": "Log in to {0}...",
        "enValue": "Log in to {0}..."
      },
      {
        "key": "clone.destination.directory.browser.title",
        "cnValue": "Destination Directory",
        "enValue": "Destination Directory"
      },
      {
        "key": "clone.repository.url.test.label",
        "cnValue": "Test",
        "enValue": "Test"
      },
      {
        "key": "clone.destination.directory.error.exists",
        "cnValue": "The directory already exists and it is not empty",
        "enValue": "The directory already exists and it is not empty"
      },
      {
        "key": "clone.destination.directory.error.not.directory",
        "cnValue": "Destination is not a directory",
        "enValue": "Destination is not a directory"
      },
      {
        "key": "clone.destination.directory.label",
        "cnValue": "Directory:",
        "enValue": "Directory:"
      }
    ]
  },
  {
    "path": "/messages/AntBundle.properties",
    "name": "AntBundle.properties",
    "props": [
      {
        "key": "add.ant.file.action.name",
        "cnValue": "Add",
        "enValue": "Add"
      },
      {
        "key": "remove.ant.file.action.description",
        "cnValue": "Remove the selected build file from the list",
        "enValue": "Remove the selected build file from the list"
      },
      {
        "key": "ant.reference.bundled.ant.name",
        "cnValue": "Bundled Ant",
        "enValue": "Bundled Ant"
      },
      {
        "key": "integer.attribute.has.invalid.value",
        "cnValue": "Attribute ''{0}'' should have an integer value",
        "enValue": "Attribute ''{0}'' should have an integer value"
      },
      {
        "key": "project.jdk.not.specified.error.message",
        "cnValue": "Project JDK not specified",
        "enValue": "Project JDK not specified"
      },
      {
        "key": "run.ant.file.or.target.action.name",
        "cnValue": "Run",
        "enValue": "Run"
      },
      {
        "key": "remove.ant.file.action.name",
        "cnValue": "Remove",
        "enValue": "Remove"
      },
      {
        "key": "remove.meta.targets.action.description",
        "cnValue": "Remove selected meta target(s)",
        "enValue": "Remove selected meta target(s)"
      },
      {
        "key": "confirm.remove.dialog.title",
        "cnValue": "Confirm Remove",
        "enValue": "Confirm Remove"
      },
      {
        "key": "build.finished.status.ant.build.completed.successfully",
        "cnValue": "Ant build completed successfully in {0} at {1}",
        "enValue": "Ant build completed successfully in {0} at {1}"
      },
      {
        "key": "stop.ant.action.name",
        "cnValue": "Stop",
        "enValue": "Stop"
      },
      {
        "key": "unnamed.string.presentation",
        "cnValue": "<Unnamed>",
        "enValue": "<Unnamed>"
      },
      {
        "key": "ant.explorer.expand.all.nodes.action.description",
        "cnValue": "Expand all build file nodes",
        "enValue": "Expand all build file nodes"
      },
      {
        "key": "ant.target.before.run.description",
        "cnValue": "Run Ant target ''{0}''",
        "enValue": "Run Ant target ''{0}''"
      },
      {
        "key": "execute.target.before.run.debug.dialog.title",
        "cnValue": "Execute Target Before Run/Debug",
        "enValue": "Execute Target Before Run/Debug"
      },
      {
        "key": "apache.ant.with.version.string.presentation",
        "cnValue": "Apache Ant version {0}",
        "enValue": "Apache Ant version {0}"
      },
      {
        "key": "build.file.properties.close.message.view.checkbox",
        "cnValue": "&Close message view if no error occurred",
        "enValue": "&Close message view if no error occurred"
      },
      {
        "key": "ant.role.ant.task",
        "cnValue": "Ant task",
        "enValue": "Ant task"
      },
      {
        "key": "filter.ant.targets.action.description",
        "cnValue": "Filter targets",
        "enValue": "Filter targets"
      },
      {
        "key": "ant.target.choser.title",
        "cnValue": "Choose Ant Target to Execute",
        "enValue": "Choose Ant Target to Execute"
      },
      {
        "key": "button.remove",
        "cnValue": "&Remove",
        "enValue": "&Remove"
      },
      {
        "key": "ant.task.message.node.prefix.text",
        "cnValue": "Task:",
        "enValue": "Task:"
      },
      {
        "key": "ant.installation.not.configured.error.message",
        "cnValue": "Ant installation is not configured. Check out Ant build file properties",
        "enValue": "Ant installation is not configured. Check out Ant build file properties"
      },
      {
        "key": "add.ant.file.action.description",
        "cnValue": "Add an existing Ant build file to the list",
        "enValue": "Add an existing Ant build file to the list"
      },
      {
        "key": "ant.settings.name.label",
        "cnValue": "&Name:",
        "enValue": "&Name:"
      },
      {
        "key": "could.not.start.process.error.dialog.title",
        "cnValue": "Could Not Start Process",
        "enValue": "Could Not Start Process"
      },
      {
        "key": "button.move.down",
        "cnValue": "Move &Down",
        "enValue": "Move &Down"
      },
      {
        "key": "intention.create.macrodef.family.name",
        "cnValue": "Create macrodef",
        "enValue": "Create macrodef"
      },
      {
        "key": "cannot.add.ant.files.dialog.title",
        "cnValue": "Cannot Add Files",
        "enValue": "Cannot Add Files"
      },
      {
        "key": "target.is.duplicated",
        "cnValue": "Target ''{0}'' is duplicated",
        "enValue": "Target ''{0}'' is duplicated"
      },
      {
        "key": "background.button",
        "cnValue": "&Background",
        "enValue": "&Background"
      },
      {
        "key": "ant.explorer.execute.on.action.group.name",
        "cnValue": "Execute on",
        "enValue": "Execute on"
      },
      {
        "key": "ant.settings.home.label",
        "cnValue": "&Home:",
        "enValue": "&Home:"
      },
      {
        "key": "cannot.start.build.name.error.message",
        "cnValue": "Cannot start {0}",
        "enValue": "Cannot start {0}"
      },
      {
        "key": "save.meta.data.name.label",
        "cnValue": "&Name:",
        "enValue": "&Name:"
      },
      {
        "key": "edit.ant.properties.additional.classpath.tab.display.name",
        "cnValue": "Additional Classpath",
        "enValue": "Additional Classpath"
      },
      {
        "key": "ant.view.toggle.tree.text.action.name",
        "cnValue": "Toggle tree/text mode",
        "enValue": "Toggle tree/text mode"
      },
      {
        "key": "build.file.properties.maximum.heap.size.label",
        "cnValue": "Maximum &heap size (Mb):",
        "enValue": "Maximum &heap size (Mb):"
      },
      {
        "key": "ant.file.structure.narrow.down.the.list.on.typing.checkbox",
        "cnValue": "&Narrow down the list on typing",
        "enValue": "&Narrow down the list on typing"
      },
      {
        "key": "select.ant.build.file.dialog.description",
        "cnValue": "Select one or more build.xml files to be added to the list",
        "enValue": "Select one or more build.xml files to be added to the list"
      },
      {
        "key": "jdk.with.name.not.configured.error.message",
        "cnValue": "JDK ({0}) needed to run this Ant target is not configured. Please update your settings in the Project Structure dialog.",
        "enValue": "JDK ({0}) needed to run this Ant target is not configured. Please update your settings in the Project Structure dialog."
      },
      {
        "key": "configure.ant.dialog.title",
        "cnValue": "Configure Ant",
        "enValue": "Configure Ant"
      },
      {
        "key": "ant.build.progress.dialog.title",
        "cnValue": "Ant Build Progress",
        "enValue": "Ant Build Progress"
      },
      {
        "key": "run.execution.tab.ant.command.line.hint",
        "cnValue": "Use \"-J\" prefix to specify JVM arguments",
        "enValue": "Use \"-J\" prefix to specify JVM arguments"
      },
      {
        "key": "run.ant.target.action.name",
        "cnValue": "Run Target",
        "enValue": "Run Target"
      },
      {
        "key": "ant.build.message.node.prefix.text",
        "cnValue": "Build:",
        "enValue": "Build:"
      },
      {
        "key": "run.ant.file.or.target.action.description",
        "cnValue": "Run the selected build file or selected target(s) with Ant",
        "enValue": "Run the selected build file or selected target(s) with Ant"
      },
      {
        "key": "register.ant.build.progress",
        "cnValue": "Registering Ant Build File ''{0}''...",
        "enValue": "Registering Ant Build File ''{0}''..."
      },
      {
        "key": "run.filters.tab.targets.label",
        "cnValue": "Targets:",
        "enValue": "Targets:"
      },
      {
        "key": "target.is.duplicated.in.imported.file",
        "cnValue": "Target ''{0}'' is duplicated in file ''{1}''",
        "enValue": "Target ''{0}'' is duplicated in file ''{1}''"
      },
      {
        "key": "build.file.properties.action.name",
        "cnValue": "Properties",
        "enValue": "Properties"
      },
      {
        "key": "executes.before.run.debug.acton.name",
        "cnValue": "Before Run/Debug...",
        "enValue": "Before Run/Debug..."
      },
      {
        "key": "ant.create.target.intention.description",
        "cnValue": "Create target ''{0}''",
        "enValue": "Create target ''{0}''"
      },
      {
        "key": "ant.jar.not.found.in.directory.error.message",
        "cnValue": "ant.jar not found in directory ''{0}''",
        "enValue": "ant.jar not found in directory ''{0}''"
      },
      {
        "key": "using.definition.which.type.failed.to.load",
        "cnValue": "Using definition which type failed to load",
        "enValue": "Using definition which type failed to load"
      },
      {
        "key": "add.action.name",
        "cnValue": "Add",
        "enValue": "Add"
      },
      {
        "key": "remove.meta.target.action.name",
        "cnValue": "Remove Meta Target",
        "enValue": "Remove Meta Target"
      },
      {
        "key": "ant.intention.create.target.family.name",
        "cnValue": "Create Target",
        "enValue": "Create Target"
      },
      {
        "key": "ant.unknown.version.string.presentation",
        "cnValue": "Unknown version",
        "enValue": "Unknown version"
      },
      {
        "key": "additional.classpath.tab.add.all.in.directory.button",
        "cnValue": "Add A&ll in Directory",
        "enValue": "Add A&ll in Directory"
      },
      {
        "key": "create.property.quickfix.name",
        "cnValue": "Create property ''{0}''",
        "enValue": "Create property ''{0}''"
      },
      {
        "key": "ant.element.role.scriptdef.element",
        "cnValue": "Scriptdef element",
        "enValue": "Scriptdef element"
      },
      {
        "key": "edit.ant.properties.filters.tab.display.name",
        "cnValue": "Filters",
        "enValue": "Filters"
      },
      {
        "key": "ant.substitution.not.allowed.error.message",
        "cnValue": "Substitution not allowed",
        "enValue": "Substitution not allowed"
      },
      {
        "key": "edit.ant.properties.name.column.name",
        "cnValue": "Name",
        "enValue": "Name"
      },
      {
        "key": "ant.explorer.assign.shortcut.action.name",
        "cnValue": "Assign Shortcut...",
        "enValue": "Assign Shortcut..."
      },
      {
        "key": "run.ant.error.dialog.title",
        "cnValue": "Run Ant",
        "enValue": "Run Ant"
      },
      {
        "key": "cancel.button",
        "cnValue": "Cancel",
        "enValue": "Cancel"
      },
      {
        "key": "ant.execution.previous.error.warning.action.name",
        "cnValue": "Previous Error/Warning",
        "enValue": "Previous Error/Warning"
      },
      {
        "key": "ant.missing.properties.file.inspection",
        "cnValue": "Missing properties file",
        "enValue": "Missing properties file"
      },
      {
        "key": "meta.target.build.sequence.name.display.name",
        "cnValue": "Build sequence {0}",
        "enValue": "Build sequence {0}"
      },
      {
        "key": "run.execution.tab.use.project.default.ant.radio",
        "cnValue": "Use project &default Ant:",
        "enValue": "Use project &default Ant:"
      },
      {
        "key": "additional.classpath.tab.classpath.border",
        "cnValue": "Class&path:",
        "enValue": "Class&path:"
      },
      {
        "key": "cannot.add.build.file.dialog.title",
        "cnValue": "Cannot Add Build File",
        "enValue": "Cannot Add Build File"
      },
      {
        "key": "build.finished.status.ant.build.aborted",
        "cnValue": "Ant build aborted in {0} at {1}",
        "enValue": "Ant build aborted in {0} at {1}"
      },
      {
        "key": "ant.actual.attribute.value.additional.info.to.xml.attribute.error.message",
        "cnValue": "(actual attribute value''{0}'')",
        "enValue": "(actual attribute value''{0}'')"
      },
      {
        "key": "remove.the.reference.to.file.confirmation.text",
        "cnValue": "Do you want to remove the reference to\n{0}?",
        "enValue": "Do you want to remove the reference to\n{0}?"
      },
      {
        "key": "ant.settings.classpath.label",
        "cnValue": "&Classpath:",
        "enValue": "&Classpath:"
      },
      {
        "key": "jdk.with.name.bad.configured.error.message",
        "cnValue": "JDK ({0}) needed to run this Ant target is incorrectly configured. Please update your settings in the Project Structure dialog.",
        "enValue": "JDK ({0}) needed to run this Ant target is incorrectly configured. Please update your settings in the Project Structure dialog."
      },
      {
        "key": "cant.run.ant.error.dialog.title",
        "cnValue": "Cannot Run Ant",
        "enValue": "Cannot Run Ant"
      },
      {
        "key": "lib.directory.not.found.in.ant.path.error.message",
        "cnValue": "lib directory not found in {0}",
        "enValue": "lib directory not found in {0}"
      },
      {
        "key": "edit.ant.properties.tab.display.name",
        "cnValue": "Properties",
        "enValue": "Properties"
      },
      {
        "key": "save.meta.data.such.sequence.of.targets.already.exists.error.message",
        "cnValue": "Such sequence of targets already exists",
        "enValue": "Such sequence of targets already exists"
      },
      {
        "key": "intention.create.property.family.name",
        "cnValue": "Create property",
        "enValue": "Create property"
      },
      {
        "key": "ant.target.name.default.target",
        "cnValue": "<default target>",
        "enValue": "<default target>"
      },
      {
        "key": "loading.ant.config.progress",
        "cnValue": "Loading Ant Configuration...",
        "enValue": "Loading Ant Configuration..."
      },
      {
        "key": "user.inout.request.ant.build.input.dialog.title",
        "cnValue": "Ant Build Input",
        "enValue": "Ant Build Input"
      },
      {
        "key": "ant.create.meta.target.action.description",
        "cnValue": "Save selected targets as a meta-target",
        "enValue": "Save selected targets as a meta-target"
      },
      {
        "key": "ant.verbose.show.all.messages.action.name",
        "cnValue": "Show All Messages",
        "enValue": "Show All Messages"
      },
      {
        "key": "attribute.is.not.allowed.here",
        "cnValue": "Attribute ''{0}'' is not allowed here",
        "enValue": "Attribute ''{0}'' is not allowed here"
      },
      {
        "key": "build.file.properties.action.description",
        "cnValue": "Show Ant build file properties dialog",
        "enValue": "Show Ant build file properties dialog"
      },
      {
        "key": "undefined.element",
        "cnValue": "Element ''{0}'' is undefined",
        "enValue": "Element ''{0}'' is undefined"
      },
      {
        "key": "edit.ant.properties.execution.tab.display.name",
        "cnValue": "Execution",
        "enValue": "Execution"
      },
      {
        "key": "cannot.resolve.refid",
        "cnValue": "Cannot resolve ''{0}'' refid",
        "enValue": "Cannot resolve ''{0}'' refid"
      },
      {
        "key": "ant.intention.create.property.text",
        "cnValue": "Add property definition ''{0}''",
        "enValue": "Add property definition ''{0}''"
      },
      {
        "key": "delete.selected.ant.configurations.confirmation.text",
        "cnValue": "Delete selected Ant configurations?",
        "enValue": "Delete selected Ant configurations?"
      },
      {
        "key": "ant.build.started.status.message",
        "cnValue": "Ant build started",
        "enValue": "Ant build started"
      },
      {
        "key": "run.ant.build.action.name",
        "cnValue": "Run Build",
        "enValue": "Run Build"
      },
      {
        "key": "run.ant.targets.action.name",
        "cnValue": "Run Targets",
        "enValue": "Run Targets"
      },
      {
        "key": "starting.ant.build.dialog.title",
        "cnValue": "Starting Ant Build",
        "enValue": "Starting Ant Build"
      },
      {
        "key": "remove.meta.targets.action.name",
        "cnValue": "Remove",
        "enValue": "Remove"
      },
      {
        "key": "intention.create.presetdef.family.name",
        "cnValue": "Create presetdef",
        "enValue": "Create presetdef"
      },
      {
        "key": "build.file.properties.maximum.stack.size.label",
        "cnValue": "Maximum &stack size (Mb):",
        "enValue": "Maximum &stack size (Mb):"
      },
      {
        "key": "ant.intention.create.property.family.name",
        "cnValue": "Create property",
        "enValue": "Create property"
      },
      {
        "key": "please.specify.a.property",
        "cnValue": "Please set a property here",
        "enValue": "Please set a property here"
      },
      {
        "key": "remove.selected.build.file.action.name",
        "cnValue": "Remove Build File",
        "enValue": "Remove Build File"
      },
      {
        "key": "intention.create.target.family.name",
        "cnValue": "Create target",
        "enValue": "Create target"
      },
      {
        "key": "build.file.properties.make.in.background.cjeclbox",
        "cnValue": "Make build in &background",
        "enValue": "Make build in &background"
      },
      {
        "key": "ant.explorer.collapse.all.nodes.action.description",
        "cnValue": "Collapse all build file nodes",
        "enValue": "Collapse all build file nodes"
      },
      {
        "key": "ant.element.role.macrodef.element",
        "cnValue": "Macrodef element",
        "enValue": "Macrodef element"
      },
      {
        "key": "project.jdk.not.specified.list.column.value",
        "cnValue": "Project JDK (not specified)",
        "enValue": "Project JDK (not specified)"
      },
      {
        "key": "ant.is.active.terminate.confirmation.text",
        "cnValue": "Ant process from the same build file is active. Terminate it?",
        "enValue": "Ant process from the same build file is active. Terminate it?"
      },
      {
        "key": "ant.build.local.history.label",
        "cnValue": "Running Ant: ''{0}''",
        "enValue": "Running Ant: ''{0}''"
      },
      {
        "key": "make.ant.runconfiguration.name",
        "cnValue": "Create run configuration",
        "enValue": "Create run configuration"
      },
      {
        "key": "ant.element.role.user.task",
        "cnValue": "User task",
        "enValue": "User task"
      },
      {
        "key": "remove.build.file.action.name",
        "cnValue": "Remove",
        "enValue": "Remove"
      },
      {
        "key": "run.execution.tab.use.custom.ant.radio",
        "cnValue": "Use c&ustom Ant:",
        "enValue": "Use c&ustom Ant:"
      },
      {
        "key": "path.to.ant.does.not.exist.error.message",
        "cnValue": "Path {0} does not exist",
        "enValue": "Path {0} does not exist"
      },
      {
        "key": "ant.target",
        "cnValue": "Target",
        "enValue": "Target"
      },
      {
        "key": "cannot.add.build.files.from.excluded.directories.error.message",
        "cnValue": "Cannot add build files from excluded directories\n{0}",
        "enValue": "Cannot add build files from excluded directories\n{0}"
      },
      {
        "key": "file.type.xml.not.supported",
        "cnValue": "''{0}'' has unsupported xml format. Probably missing doctype.",
        "enValue": "''{0}'' has unsupported xml format. Probably missing doctype."
      },
      {
        "key": "project.jdk.project.jdk.name.list.column.value",
        "cnValue": "Project JDK ({0})",
        "enValue": "Project JDK ({0})"
      },
      {
        "key": "ant.target.before.run.description.empty",
        "cnValue": "Run Ant target",
        "enValue": "Run Ant target"
      },
      {
        "key": "save.meta.data.targets.label",
        "cnValue": "Targets:",
        "enValue": "Targets:"
      },
      {
        "key": "edit.ant.properties.description.column.name",
        "cnValue": "Description",
        "enValue": "Description"
      },
      {
        "key": "ant.create.meta.target.action.name",
        "cnValue": "Create Meta Target",
        "enValue": "Create Meta Target"
      },
      {
        "key": "ant.cant.resolve.property.error.message",
        "cnValue": "Can''t resolve property: {0}",
        "enValue": "Can''t resolve property: {0}"
      },
      {
        "key": "ant.verbose.show.all.messages.action.description",
        "cnValue": "Show all messages produces by ant build",
        "enValue": "Show all messages produces by ant build"
      },
      {
        "key": "ant.view.pause.output.action.name",
        "cnValue": "Pause Output",
        "enValue": "Pause Output"
      },
      {
        "key": "select.ant.build.file.dialog.title",
        "cnValue": "Select Ant Build File",
        "enValue": "Select Ant Build File"
      },
      {
        "key": "remove.action.name",
        "cnValue": "Remove",
        "enValue": "Remove"
      },
      {
        "key": "cannot.resolve.target",
        "cnValue": "Target ''{0}'' is unknown",
        "enValue": "Target ''{0}'' is unknown"
      },
      {
        "key": "ant.execution.next.error.warning.action.name",
        "cnValue": "Next Error/Warning",
        "enValue": "Next Error/Warning"
      },
      {
        "key": "target.tag.name.status.text",
        "cnValue": "Target: {0}",
        "enValue": "Target: {0}"
      },
      {
        "key": "ant.duplicate.imported.targets.inspection",
        "cnValue": "Duplicate targets in imported files",
        "enValue": "Duplicate targets in imported files"
      },
      {
        "key": "cant.run.ant.ant.reference.is.not.configured.error.message",
        "cnValue": "Ant ''{0}'' is not configured",
        "enValue": "Ant ''{0}'' is not configured"
      },
      {
        "key": "nested.element.is.not.allowed.here",
        "cnValue": "Nested element ''{0}'' is not allowed here",
        "enValue": "Nested element ''{0}'' is not allowed here"
      },
      {
        "key": "build.finished.status.ant.build.completed.with.warnings",
        "cnValue": "Ant build completed with {0, choice, 0#no warnings|1#one warning|2#{0} warnings} in {1} at {2}",
        "enValue": "Ant build completed with {0, choice, 0#no warnings|1#one warning|2#{0} warnings} in {1} at {2}"
      },
      {
        "key": "close.ant.build.messages.dialog.title",
        "cnValue": "Close Ant Build Messages",
        "enValue": "Close Ant Build Messages"
      },
      {
        "key": "ant.jar.is.directory.error.message",
        "cnValue": "{0} is directory",
        "enValue": "{0} is directory"
      },
      {
        "key": "intention.configure.highlighting.text",
        "cnValue": "Configure highlighting",
        "enValue": "Configure highlighting"
      },
      {
        "key": "ant.role.ant.target",
        "cnValue": "Ant target",
        "enValue": "Ant target"
      },
      {
        "key": "ant.role.ant.property",
        "cnValue": "Ant property",
        "enValue": "Ant property"
      },
      {
        "key": "create.property.in.file.quickfix.name",
        "cnValue": "Create property ''{0}'' in file ''{1}''",
        "enValue": "Create property ''{0}'' in file ''{1}''"
      },
      {
        "key": "ant.target.message.node.prefix.text",
        "cnValue": "Target:",
        "enValue": "Target:"
      },
      {
        "key": "ant.properties.declaration.element.description",
        "cnValue": "Ant properties declaration",
        "enValue": "Ant properties declaration"
      },
      {
        "key": "ant.element.role.ant.project.name",
        "cnValue": "Ant project name",
        "enValue": "Ant project name"
      },
      {
        "key": "cant.run.ant.no.ant.configured.error.message",
        "cnValue": "No Ant configured",
        "enValue": "No Ant configured"
      },
      {
        "key": "ant.process.is.active.terminate.confirmation.text",
        "cnValue": "Ant Process is active. Terminate Ant process?",
        "enValue": "Ant Process is active. Terminate Ant process?"
      },
      {
        "key": "run.execution.tab.set.default.button",
        "cnValue": "&Set Default...",
        "enValue": "&Set Default..."
      },
      {
        "key": "run.execution.tab.run.under.jdk.label",
        "cnValue": "Run under &JDK:",
        "enValue": "Run under &JDK:"
      },
      {
        "key": "build.finished.status.ant.build.completed.with.errors.warnings",
        "cnValue": "Ant build completed with {0, choice, 0#no errors|1#one error|2#{0} errors} and {1, choice, 0#no warnings|1#one warning|2#{1} warnings} in {2} at {3}",
        "enValue": "Ant build completed with {0, choice, 0#no errors|1#one error|2#{0} errors} and {1, choice, 0#no warnings|1#one warning|2#{1} warnings} in {2} at {3}"
      },
      {
        "key": "rerun.ant.action.name",
        "cnValue": "Rerun",
        "enValue": "Rerun"
      },
      {
        "key": "ant.property.value.editor.insert.macro.tooltip.text",
        "cnValue": "Insert Macro",
        "enValue": "Insert Macro"
      },
      {
        "key": "ant.duplicate.targets.inspection",
        "cnValue": "Duplicate targets",
        "enValue": "Duplicate targets"
      },
      {
        "key": "intention.configure.highlighting.family.name",
        "cnValue": "Configure highlighting",
        "enValue": "Configure highlighting"
      },
      {
        "key": "execute.target.wrong.name.format.error.message",
        "cnValue": "Wrong name format: {0}",
        "enValue": "Wrong name format: {0}"
      },
      {
        "key": "canceled.by.user.error.message",
        "cnValue": "Canceled by user",
        "enValue": "Canceled by user"
      },
      {
        "key": "ant.tree.structure.no.build.files.message",
        "cnValue": "<The list of build files is empty>",
        "enValue": "<The list of build files is empty>"
      },
      {
        "key": "ant.build.tab.content.title",
        "cnValue": "Ant Build",
        "enValue": "Ant Build"
      },
      {
        "key": "run.execution.tab.ant.command.line.label",
        "cnValue": "Ant command &line:",
        "enValue": "Ant command &line:"
      },
      {
        "key": "unknown.macro.attribute",
        "cnValue": "Macro attribute ''{0}'' is unknown",
        "enValue": "Macro attribute ''{0}'' is unknown"
      },
      {
        "key": "ant.event.before.compilation.presentable.name",
        "cnValue": "Before Compilation",
        "enValue": "Before Compilation"
      },
      {
        "key": "filter.ant.targets.action.name",
        "cnValue": "Filter targets",
        "enValue": "Filter targets"
      },
      {
        "key": "delete.selected.ant.configuration.confirmation.text",
        "cnValue": "Delete selected Ant configuration?",
        "enValue": "Delete selected Ant configuration?"
      },
      {
        "key": "button.add",
        "cnValue": "&Add",
        "enValue": "&Add"
      },
      {
        "key": "file.doesnt.exist",
        "cnValue": "''{0}'' does not exist",
        "enValue": "''{0}'' does not exist"
      },
      {
        "key": "failed.to.load.types",
        "cnValue": "Failed to load type(s)",
        "enValue": "Failed to load type(s)"
      },
      {
        "key": "remove.selected.meta.targets.action.name",
        "cnValue": "Remove Meta Targets",
        "enValue": "Remove Meta Targets"
      },
      {
        "key": "run.execution.tab.ant.command.line.dialog.title",
        "cnValue": "Ant Command Line",
        "enValue": "Ant Command Line"
      },
      {
        "key": "executing.task.tag.value.status.text",
        "cnValue": "Executing task: {0}",
        "enValue": "Executing task: {0}"
      },
      {
        "key": "file.type.not.supported",
        "cnValue": "''{0}'' has unsupported format",
        "enValue": "''{0}'' has unsupported format"
      },
      {
        "key": "edit.ant.properties.value.column.name",
        "cnValue": "Value",
        "enValue": "Value"
      },
      {
        "key": "run.execution.tab.run.with.ant.border",
        "cnValue": "Run with Ant:",
        "enValue": "Run with Ant:"
      },
      {
        "key": "ant.event.before.run.debug.presentable.name",
        "cnValue": "Before Run/Debug",
        "enValue": "Before Run/Debug"
      },
      {
        "key": "unknown.property",
        "cnValue": "Property ''{0}'' is unknown",
        "enValue": "Property ''{0}'' is unknown"
      },
      {
        "key": "ant.event.after.compilation.presentable.name",
        "cnValue": "After Compilation",
        "enValue": "After Compilation"
      },
      {
        "key": "cant.add.file.error.message",
        "cnValue": "Cannot add file {0}: {1}",
        "enValue": "Cannot add file {0}: {1}"
      },
      {
        "key": "cant.read.from.ant.jar.error.message",
        "cnValue": "Can''t read from {0}",
        "enValue": "Can''t read from {0}"
      },
      {
        "key": "ant.implicit.ant.properties.property.declaration.name",
        "cnValue": "implicit ant properties",
        "enValue": "implicit ant properties"
      },
      {
        "key": "ant.setup.dialog.title",
        "cnValue": "Ant Setup",
        "enValue": "Ant Setup"
      },
      {
        "key": "button.move.up",
        "cnValue": "Move &Up",
        "enValue": "Move &Up"
      },
      {
        "key": "build.file.properties.dialog.title",
        "cnValue": "Build File Properties",
        "enValue": "Build File Properties"
      }
    ]
  },
  {
    "path": "/messages/XmlBundle.properties",
    "name": "XmlBundle.properties",
    "props": [
      {
        "key": "html.replace.tag.with.css.quickfix.family.name",
        "cnValue": "Replace with CSS",
        "enValue": "Replace with CSS"
      },
      {
        "key": "label.edit.external.resource.uri",
        "cnValue": "URI:",
        "enValue": "URI:"
      },
      {
        "key": "xml.inspections.group.name",
        "cnValue": "XML",
        "enValue": "XML"
      },
      {
        "key": "xml.editor.options.misc.title",
        "cnValue": "XML/HTML",
        "enValue": "XML/HTML"
      },
      {
        "key": "emmet.bem.title",
        "cnValue": "BEM",
        "enValue": "BEM"
      },
      {
        "key": "web.editor.configuration.title",
        "cnValue": "Web",
        "enValue": "Web"
      },
      {
        "key": "emmet.bem.class.name.modifier.separator.label",
        "cnValue": "Class name's modifier separator:",
        "enValue": "Class name's modifier separator:"
      },
      {
        "key": "emmet.configuration.title",
        "cnValue": "Emmet",
        "enValue": "Emmet"
      },
      {
        "key": "column.name.edit.external.resource.uri",
        "cnValue": "URI",
        "enValue": "URI"
      },
      {
        "key": "emmet.bem.short.element.prefix.label",
        "cnValue": "Short element prefix:",
        "enValue": "Short element prefix:"
      },
      {
        "key": "emmet.title",
        "cnValue": "Emmet",
        "enValue": "Emmet"
      },
      {
        "key": "html.inspections.group.name",
        "cnValue": "HTML",
        "enValue": "HTML"
      },
      {
        "key": "emmet.bem.class.name.element.separator.label",
        "cnValue": "Class name's element separator:",
        "enValue": "Class name's element separator:"
      }
    ]
  },
  {
    "path": "/messages/CompilerBundle.properties",
    "name": "CompilerBundle.properties",
    "props": [
      {
        "key": "dialog.message.compilation.of.unloaded.modules.failed",
        "cnValue": "There are unloaded modules in the project which depend on changed files.<br>Compilation of these modules finished with errors.",
        "enValue": "There are unloaded modules in the project which depend on changed files.<br>Compilation of these modules finished with errors."
      },
      {
        "key": "compiler.eclipse.name",
        "cnValue": "Eclipse",
        "enValue": "Eclipse"
      },
      {
        "key": "dialog.title.delete.old.outputs",
        "cnValue": "Delete Old Output Directories",
        "enValue": "Delete Old Output Directories"
      },
      {
        "key": "notification.action.text.do.not.ask",
        "cnValue": "Do not ask again",
        "enValue": "Do not ask again"
      },
      {
        "key": "generated.ant.build.custom.compilers.comment",
        "cnValue": "Register Custom Compiler Taskdefs",
        "enValue": "Register Custom Compiler Taskdefs"
      },
      {
        "key": "compiler.javac.name",
        "cnValue": "Javac",
        "enValue": "Javac"
      },
      {
        "key": "generate.ant.build.custom.compiler.conflict.message.row",
        "cnValue": "<li>{0}</li>",
        "enValue": "<li>{0}</li>"
      },
      {
        "key": "dialog.text.delete.old.outputs",
        "cnValue": "<html>The following {0, choice, 1#directory|2#directories} will be deleted. You will not be able to undo this operation!<br/>{1}</html>",
        "enValue": "<html>The following {0, choice, 1#directory|2#directories} will be deleted. You will not be able to undo this operation!<br/>{1}</html>"
      },
      {
        "key": "node.text.0.module.sources",
        "cnValue": "''{0}'' sources",
        "enValue": "''{0}'' sources"
      },
      {
        "key": "compiler.ref.service.validation.task.name",
        "cnValue": "Backward Reference Indices Validation",
        "enValue": "Backward Reference Indices Validation"
      },
      {
        "key": "notification.content.delete.old.output.directories",
        "cnValue": "{0, choice, 1#An output directory which doesn''t|2#{0} output directories which don''''t} correspond to existing modules {0, choice, 1#is|2#are} found under {1}. You may delete {0, choice, 1#this directory|2#these directories} to save disk space.",
        "enValue": "{0, choice, 1#An output directory which doesn''t|2#{0} output directories which don''''t} correspond to existing modules {0, choice, 1#is|2#are} found under {1}. You may delete {0, choice, 1#this directory|2#these directories} to save disk space."
      },
      {
        "key": "notification.action.text.cleanup",
        "cnValue": "Clean Up...",
        "enValue": "Clean Up..."
      },
      {
        "key": "element.type.name.module.source",
        "cnValue": "Module Sources",
        "enValue": "Module Sources"
      },
      {
        "key": "progress.text.deleting.directory",
        "cnValue": "Deleting directory {0}...",
        "enValue": "Deleting directory {0}..."
      },
      {
        "key": "button.text.delete.old.outputs",
        "cnValue": "Delete",
        "enValue": "Delete"
      },
      {
        "key": "element.type.name.artifact",
        "cnValue": "Artifact",
        "enValue": "Artifact"
      },
      {
        "key": "progress.text.synchronizing.output.directories",
        "cnValue": "Synchronizing output directories...",
        "enValue": "Synchronizing output directories..."
      },
      {
        "key": "notification.title.delete.old.output.directories",
        "cnValue": "Clean up old output directories",
        "enValue": "Clean up old output directories"
      }
    ]
  },
  {
    "path": "/messages/VcsBundle.properties",
    "name": "VcsBundle.properties",
    "props": [
      {
        "key": "shelve.changes.progress.title",
        "cnValue": "Shelving Changes...",
        "enValue": "Shelving Changes..."
      },
      {
        "key": "update.tree.node.size.statistics",
        "cnValue": "{0,choice, 0#no items|1#1 item|2#{0, number} items}",
        "enValue": "{0,choice, 0#no items|1#1 item|2#{0, number} items}"
      },
      {
        "key": "vcs.shelf.store.base.content",
        "cnValue": "Shelve base revisions of files under distributed version control systems",
        "enValue": "Shelve base revisions of files under distributed version control systems"
      },
      {
        "key": "column.name.configure.vcses.vcs",
        "cnValue": "VCS",
        "enValue": "VCS"
      },
      {
        "key": "group.name.version.control",
        "cnValue": "&VCS",
        "enValue": "&VCS"
      },
      {
        "key": "executable.project.override",
        "cnValue": "Set this path only for the current project",
        "enValue": "Set this path only for the current project"
      },
      {
        "key": "file.status.name.suppressed",
        "cnValue": "Suppressed",
        "enValue": "Suppressed"
      },
      {
        "key": "settings.highlight.files.with.conflicts.checkbox",
        "cnValue": "&Highlight files with changelist conflicts",
        "enValue": "&Highlight files with changelist conflicts"
      },
      {
        "key": "settings.show.conflict.resolve.dialog.checkbox",
        "cnValue": "Show &dialog on attempt to edit file from non-active changelist",
        "enValue": "Show &dialog on attempt to edit file from non-active changelist"
      },
      {
        "key": "settings.files.with.ignored.conflicts.list.title",
        "cnValue": "Files with ignored conflicts",
        "enValue": "Files with ignored conflicts"
      },
      {
        "key": "annotation.wrong.line.number.notification.text",
        "cnValue": "<html>Number of lines annotated by {0} is not equal to number of lines in the file. Check file encoding and line separators.</html>",
        "enValue": "<html>Number of lines annotated by {0} is not equal to number of lines in the file. Check file encoding and line separators.</html>"
      },
      {
        "key": "executable.select.description",
        "cnValue": "Select executable file to be used for VCS operations",
        "enValue": "Select executable file to be used for VCS operations"
      },
      {
        "key": "commit.dialog.partial.commit.warning.title",
        "cnValue": "Partial Commit Is Not Supported",
        "enValue": "Partial Commit Is Not Supported"
      },
      {
        "key": "vcs.shelf.move.text",
        "cnValue": "Move shelves to the new location",
        "enValue": "Move shelves to the new location"
      },
      {
        "key": "commit.dialog.partial.commit.warning.body",
        "cnValue": "Partial commit is not supported for ''{0}''.\nAll changes in the selected files will be committed.",
        "enValue": "Partial commit is not supported for ''{0}''.\nAll changes in the selected files will be committed."
      }
    ]
  },
  {
    "path": "/messages/DebuggerBundle.properties",
    "name": "DebuggerBundle.properties",
    "props": [
      {
        "key": "threads.export.attribute.label.object-id",
        "cnValue": "<0x{0}> (a {1})",
        "enValue": "<0x{0}> (a {1})"
      },
      {
        "key": "status.thread.running",
        "cnValue": "RUNNING",
        "enValue": "RUNNING"
      },
      {
        "key": "label.generic.debugger.parameters.patcher.configurable.socket",
        "cnValue": "&Socket",
        "enValue": "&Socket"
      },
      {
        "key": "threads.export.attribute.label.priority",
        "cnValue": "prio={0}",
        "enValue": "prio={0}"
      },
      {
        "key": "label.compound.renderer.configurable.ondemand",
        "cnValue": "On-demand",
        "enValue": "On-demand"
      },
      {
        "key": "error.class.circularity.error",
        "cnValue": "Class circularity error : {0}",
        "enValue": "Class circularity error : {0}"
      },
      {
        "key": "transport.name.socket",
        "cnValue": "socket",
        "enValue": "socket"
      },
      {
        "key": "breakpoint.properties.panel.option.caller.filter",
        "cnValue": "Calle&r filters:",
        "enValue": "Calle&r filters:"
      },
      {
        "key": "action.maximizeContent.text",
        "cnValue": "",
        "enValue": ""
      },
      {
        "key": "progress.hot.swap.title",
        "cnValue": "Hot Swap",
        "enValue": "Hot Swap"
      },
      {
        "key": "status.thread.unknown",
        "cnValue": "UNKNOWN",
        "enValue": "UNKNOWN"
      },
      {
        "key": "status.thread.not.started",
        "cnValue": "NOT_STARTED",
        "enValue": "NOT_STARTED"
      },
      {
        "key": "label.compound.renderer.configurable.table.header.ondemand",
        "cnValue": "On-demand",
        "enValue": "On-demand"
      },
      {
        "key": "threads.export.attribute.label.tid",
        "cnValue": "tid=0x{0}",
        "enValue": "tid=0x{0}"
      },
      {
        "key": "message.node.toString",
        "cnValue": "… toString()",
        "enValue": "… toString()"
      },
      {
        "key": "breakpoint.exception.breakpoint.display.name",
        "cnValue": "''{0}''",
        "enValue": "''{0}''"
      },
      {
        "key": "exception.breakpoint.console.message.location.info",
        "cnValue": "{0}:{1,number,#}",
        "enValue": "{0}:{1,number,#}"
      },
      {
        "key": "status.thread.monitor",
        "cnValue": "MONITOR",
        "enValue": "MONITOR"
      },
      {
        "key": "status.thread.wait",
        "cnValue": "WAIT",
        "enValue": "WAIT"
      },
      {
        "key": "status.thread.sleeping",
        "cnValue": "SLEEPING",
        "enValue": "SLEEPING"
      },
      {
        "key": "status.thread.zombie",
        "cnValue": "ZOMBIE",
        "enValue": "ZOMBIE"
      },
      {
        "key": "value.none",
        "cnValue": "<None>",
        "enValue": "<None>"
      },
      {
        "key": "label.thread.node",
        "cnValue": "\"{0}\"@{1}: {2}",
        "enValue": "\"{0}\"@{1}: {2}"
      },
      {
        "key": "status.thread.undefined",
        "cnValue": "UNDEFINED",
        "enValue": "UNDEFINED"
      },
      {
        "key": "threads.export.attribute.label.nid",
        "cnValue": "nid={0}",
        "enValue": "nid={0}"
      }
    ]
  },
  {
    "path": "/messages/CodeInsightBundle.properties",
    "name": "CodeInsightBundle.properties",
    "props": [
      {
        "key": "unwrap.lambda",
        "cnValue": "Unwrap 'lambda...'",
        "enValue": "Unwrap 'lambda...'"
      },
      {
        "key": "surround.with.runtime.type.template",
        "cnValue": "((RuntimeType)expr)",
        "enValue": "((RuntimeType)expr)"
      },
      {
        "key": "intentions.category.ejb",
        "cnValue": "EJB",
        "enValue": "EJB"
      },
      {
        "key": "surround.with.try.catch.template",
        "cnValue": "try / catch",
        "enValue": "try / catch"
      },
      {
        "key": "macro.current.package",
        "cnValue": "currentPackage()",
        "enValue": "currentPackage()"
      },
      {
        "key": "intention.create.test.dialog.java",
        "cnValue": "Java",
        "enValue": "Java"
      },
      {
        "key": "deannotate.intention.action.text",
        "cnValue": "Deannotate",
        "enValue": "Deannotate"
      },
      {
        "key": "template.shortcut.space",
        "cnValue": "Space",
        "enValue": "Space"
      },
      {
        "key": "macro.qualified.class.name",
        "cnValue": "qualifiedClassName()",
        "enValue": "qualifiedClassName()"
      },
      {
        "key": "macro.descendant.classes.enum",
        "cnValue": "descendantClassesEnum(String)",
        "enValue": "descendantClassesEnum(String)"
      },
      {
        "key": "macro.suggest.index.name",
        "cnValue": "suggestIndexName()",
        "enValue": "suggestIndexName()"
      },
      {
        "key": "surround.with.dowhile.template",
        "cnValue": "do / while",
        "enValue": "do / while"
      },
      {
        "key": "macro.cast.to.left.side.type",
        "cnValue": "castToLeftSideType()",
        "enValue": "castToLeftSideType()"
      },
      {
        "key": "macro.undescoresToCamelCase.string",
        "cnValue": "underscoresToCamelCase(String)",
        "enValue": "underscoresToCamelCase(String)"
      },
      {
        "key": "macro.file.name.without.extension",
        "cnValue": "fileNameWithoutExtension()",
        "enValue": "fileNameWithoutExtension()"
      },
      {
        "key": "macro.firstWord.string",
        "cnValue": "firstWord(String)",
        "enValue": "firstWord(String)"
      },
      {
        "key": "macro.variable.of.type",
        "cnValue": "variableOfType(Type)",
        "enValue": "variableOfType(Type)"
      },
      {
        "key": "surround.with.for.template",
        "cnValue": "for",
        "enValue": "for"
      },
      {
        "key": "surround.with.if.expression.template",
        "cnValue": "if (expr) {...}",
        "enValue": "if (expr) {...}"
      },
      {
        "key": "collapse.selection.overlapping.warning.text",
        "cnValue": "Overlapping fold region(s) exist",
        "enValue": "Overlapping fold region(s) exist"
      },
      {
        "key": "template.shortcut.tab",
        "cnValue": "Tab",
        "enValue": "Tab"
      },
      {
        "key": "surround.with.if.template",
        "cnValue": "if",
        "enValue": "if"
      },
      {
        "key": "macro.expected.type",
        "cnValue": "expectedType()",
        "enValue": "expectedType()"
      },
      {
        "key": "macro.suggest.variable.name",
        "cnValue": "suggestVariableName()",
        "enValue": "suggestVariableName()"
      },
      {
        "key": "macro.decapitalize.string",
        "cnValue": "decapitalize(String)",
        "enValue": "decapitalize(String)"
      },
      {
        "key": "collapse.selection.overlapping.warning.title",
        "cnValue": "Fold Selection",
        "enValue": "Fold Selection"
      },
      {
        "key": "collapse.selection.existing.autogenerated.region",
        "cnValue": "Cannot remove auto-generated fold region",
        "enValue": "Cannot remove auto-generated fold region"
      },
      {
        "key": "macro.iterable.component.type",
        "cnValue": "iterableComponentType(ArrayOrIterable)",
        "enValue": "iterableComponentType(ArrayOrIterable)"
      },
      {
        "key": "intention.create.test.dialog.tearDown",
        "cnValue": "tear&Down/@After",
        "enValue": "tear&Down/@After"
      },
      {
        "key": "macro.methodname",
        "cnValue": "methodName()",
        "enValue": "methodName()"
      },
      {
        "key": "macro.linenumber",
        "cnValue": "lineNumber()",
        "enValue": "lineNumber()"
      },
      {
        "key": "surround.with.ifelse.expression.template",
        "cnValue": "if (expr) {...} else {...}",
        "enValue": "if (expr) {...} else {...}"
      },
      {
        "key": "surround.with.try.finally.template",
        "cnValue": "try / finally",
        "enValue": "try / finally"
      },
      {
        "key": "inspection.i18n.quickfix.annotate",
        "cnValue": "Annotate...",
        "enValue": "Annotate..."
      },
      {
        "key": "surround.with.while.template",
        "cnValue": "while",
        "enValue": "while"
      },
      {
        "key": "intention.surround.with.ARM.block.template",
        "cnValue": "try-with-resources",
        "enValue": "try-with-resources"
      },
      {
        "key": "macro.capitalize.string",
        "cnValue": "capitalize(String)",
        "enValue": "capitalize(String)"
      },
      {
        "key": "macro.expression.type",
        "cnValue": "expressionType(Expression)",
        "enValue": "expressionType(Expression)"
      },
      {
        "key": "change.uid.action.name",
        "cnValue": "Randomly change 'serialVersionUID' initializer",
        "enValue": "Randomly change 'serialVersionUID' initializer"
      },
      {
        "key": "macro.suggest.first.variable.name",
        "cnValue": "suggestFirstVariableName()",
        "enValue": "suggestFirstVariableName()"
      },
      {
        "key": "surround.with.parenthesis.template",
        "cnValue": "(expr)",
        "enValue": "(expr)"
      },
      {
        "key": "macro.array.variable",
        "cnValue": "arrayVariable()",
        "enValue": "arrayVariable()"
      },
      {
        "key": "macro.file.name",
        "cnValue": "fileName()",
        "enValue": "fileName()"
      },
      {
        "key": "macro.capitalizeAndUnderscore.string",
        "cnValue": "capitalizeAndUnderscore(String)",
        "enValue": "capitalizeAndUnderscore(String)"
      },
      {
        "key": "macro.iterable.variable",
        "cnValue": "iterableVariable()",
        "enValue": "iterableVariable()"
      },
      {
        "key": "intention.create.test.dialog.setUp",
        "cnValue": "set&Up/@Before",
        "enValue": "set&Up/@Before"
      },
      {
        "key": "surround.with.cast.template",
        "cnValue": "((Type)expr)",
        "enValue": "((Type)expr)"
      },
      {
        "key": "surround.with.try.catch.finally.template",
        "cnValue": "try / catch / finally",
        "enValue": "try / catch / finally"
      },
      {
        "key": "intention.extract.set.from.comparison.chain.duplicates",
        "cnValue": "{0} has detected {1} code {1,choice,1#fragment|2#fragments} in this class that can be replaced using newly created Set. Would you like to replace {1,choice,1#it|2#them}?",
        "enValue": "{0} has detected {1} code {1,choice,1#fragment|2#fragments} in this class that can be replaced using newly created Set. Would you like to replace {1,choice,1#it|2#them}?"
      },
      {
        "key": "inlay.hints.blacklist.pattern.explanation",
        "cnValue": "<html> No in-line parameter name hints will be shown for methods matching any of these patterns.<br> Patterns are matched on fully qualified method name, parameter count and parameter names. <ul> <li><code>java.lang</code> matches all methods from <em>java.lang</em> package</li> <li><code>java.lang.*(*, *)</code> matches all methods from the <em>java.lang</em> package with two parameters</li> <li><code>(*info)</code> matches all single parameter methods where the parameter name ends with <em>info</em></li> <li><code>(key, value)</code> matches all methods with parameters <em>key</em> and <em>value</em></li> <li><code>*.put(key, value)</code> matches all <em>put</em> methods with <em>key</em> and <em>value</em> parameters </ul> </html>",
        "enValue": "<html> No in-line parameter name hints will be shown for methods matching any of these patterns.<br> Patterns are matched on fully qualified method name, parameter count and parameter names. <ul> <li><code>java.lang</code> matches all methods from <em>java.lang</em> package</li> <li><code>java.lang.*(*, *)</code> matches all methods from the <em>java.lang</em> package with two parameters</li> <li><code>(*info)</code> matches all single parameter methods where the parameter name ends with <em>info</em></li> <li><code>(key, value)</code> matches all methods with parameters <em>key</em> and <em>value</em></li> <li><code>*.put(key, value)</code> matches all <em>put</em> methods with <em>key</em> and <em>value</em> parameters </ul> </html>"
      },
      {
        "key": "template.shortcut.enter",
        "cnValue": "Enter",
        "enValue": "Enter"
      },
      {
        "key": "surround.with.runnable.template",
        "cnValue": "Runnable",
        "enValue": "Runnable"
      },
      {
        "key": "template.shortcut.none",
        "cnValue": "None",
        "enValue": "None"
      },
      {
        "key": "macro.groovy.script",
        "cnValue": "groovyScript(\"groovy code\")",
        "enValue": "groovyScript(\"groovy code\")"
      },
      {
        "key": "macro.undescoresToSpaces.string",
        "cnValue": "underscoresToSpaces(String)",
        "enValue": "underscoresToSpaces(String)"
      },
      {
        "key": "generate.equals.hashcode.template",
        "cnValue": "&Template:",
        "enValue": "&Template:"
      },
      {
        "key": "macro.method.parameters",
        "cnValue": "methodParameters()",
        "enValue": "methodParameters()"
      },
      {
        "key": "quickfix.i18n.command.name",
        "cnValue": "I18nize",
        "enValue": "I18nize"
      },
      {
        "key": "macro.right.side.type",
        "cnValue": "rightSideType()",
        "enValue": "rightSideType()"
      },
      {
        "key": "macro.component.type.of.array",
        "cnValue": "componentTypeOf(Array)",
        "enValue": "componentTypeOf(Array)"
      },
      {
        "key": "surround.with.ifelse.template",
        "cnValue": "if / else",
        "enValue": "if / else"
      },
      {
        "key": "livetemplate.description.prsf",
        "cnValue": "private static final",
        "enValue": "private static final"
      },
      {
        "key": "macro.guess.element.type.of.container",
        "cnValue": "guessElementType(Container)",
        "enValue": "guessElementType(Container)"
      },
      {
        "key": "inspection.i18n.quickfix.annotate.element",
        "cnValue": "Annotate {0} ''{1}''...",
        "enValue": "Annotate {0} ''{1}''..."
      }
    ]
  },
  {
    "path": "/messages/UIBundle.properties",
    "name": "UIBundle.properties",
    "props": [
      {
        "key": "memory.usage.panel.message.text",
        "cnValue": "{0,number,####} of {1,number,####}M",
        "enValue": "{0,number,####} of {1,number,####}M"
      },
      {
        "key": "tool.window.name.todo",
        "cnValue": "TODO",
        "enValue": "TODO"
      },
      {
        "key": "tool.window.name.ant.build",
        "cnValue": "Ant Build",
        "enValue": "Ant Build"
      },
      {
        "key": "tool.window.name.cvs",
        "cnValue": "CVS",
        "enValue": "CVS"
      },
      {
        "key": "welcome.screen.plugins.panel.learn.more.link",
        "cnValue": "<html><body><u>...</u></body></html>",
        "enValue": "<html><body><u>...</u></body></html>"
      }
    ]
  },
  {
    "path": "/i18n/ExternalSystemBundle.properties",
    "name": "ExternalSystemBundle.properties",
    "props": [
      {
        "key": "progress.update.text",
        "cnValue": "{0}: {1}",
        "enValue": "{0}: {1}"
      }
    ]
  },
  {
    "path": "/messages/PsiBundle.properties",
    "name": "PsiBundle.properties",
    "props": [
      {
        "key": "abstract.visibility.presentation",
        "cnValue": "abstract",
        "enValue": "abstract"
      },
      {
        "key": "native.visibility.presentation",
        "cnValue": "native",
        "enValue": "native"
      },
      {
        "key": "open.visibility.presentation",
        "cnValue": "open",
        "enValue": "open"
      },
      {
        "key": "transient.visibility.presentation",
        "cnValue": "transient",
        "enValue": "transient"
      },
      {
        "key": "transitive.visibility.presentation",
        "cnValue": "transitive",
        "enValue": "transitive"
      },
      {
        "key": "volatile.visibility.presentation",
        "cnValue": "volatile",
        "enValue": "volatile"
      },
      {
        "key": "public.visibility.presentation",
        "cnValue": "public",
        "enValue": "public"
      },
      {
        "key": "static.visibility.presentation",
        "cnValue": "static",
        "enValue": "static"
      },
      {
        "key": "private.visibility.presentation",
        "cnValue": "private",
        "enValue": "private"
      },
      {
        "key": "packageLocal.visibility.presentation",
        "cnValue": "package-private",
        "enValue": "package-private"
      },
      {
        "key": "strictfp.visibility.presentation",
        "cnValue": "strictfp",
        "enValue": "strictfp"
      },
      {
        "key": "protected.visibility.presentation",
        "cnValue": "protected",
        "enValue": "protected"
      },
      {
        "key": "synchronized.visibility.presentation",
        "cnValue": "synchronized",
        "enValue": "synchronized"
      },
      {
        "key": "final.visibility.presentation",
        "cnValue": "final",
        "enValue": "final"
      }
    ]
  },
  {
    "path": "/messages/InspectionsBundle.properties",
    "name": "InspectionsBundle.properties",
    "props": [
      {
        "key": "dataflow.message.arraystore",
        "cnValue": "Storing element of type <code>{0}</code> to array of <code>{1}</code> elements may produce <code>java.lang.ArrayStoreException</code>",
        "enValue": "Storing element of type <code>{0}</code> to array of <code>{1}</code> elements may produce <code>java.lang.ArrayStoreException</code>"
      },
      {
        "key": "dataflow.message.storing.array.nullable",
        "cnValue": "Expression <code>#ref</code> might evaluate to null but is stored to an array of @NotNull elements",
        "enValue": "Expression <code>#ref</code> might evaluate to null but is stored to an array of @NotNull elements"
      },
      {
        "key": "inspection.capturing.cleaner",
        "cnValue": "Runnable passed to Cleaner.register() captures ''{0}'' reference",
        "enValue": "Runnable passed to Cleaner.register() captures ''{0}'' reference"
      },
      {
        "key": "inspection.problem.descriptor.count",
        "cnValue": "{0, choice, 0#|1#(1 item)|2#({0,number,integer} items)}",
        "enValue": "{0, choice, 0#|1#(1 item)|2#({0,number,integer} items)}"
      },
      {
        "key": "inspection.reference.default.package",
        "cnValue": "<default>",
        "enValue": "<default>"
      },
      {
        "key": "inspection.visibility.package.private.top.level.classes",
        "cnValue": "Suggest package-private visibility level for top-level classes",
        "enValue": "Suggest package-private visibility level for top-level classes"
      },
      {
        "key": "inspection.unused.symbol.check.accessors",
        "cnValue": "Getters/setters",
        "enValue": "Getters/setters"
      },
      {
        "key": "inspection.visibility.option.constants",
        "cnValue": "Suggest weaker visibility for constants",
        "enValue": "Suggest weaker visibility for constants"
      },
      {
        "key": "inspection.fuse.stream.operations.option.strict.mode",
        "cnValue": "Do not suggest 'toList()' or 'toSet()' collectors",
        "enValue": "Do not suggest 'toList()' or 'toSet()' collectors"
      },
      {
        "key": "inspection.dead.code.option.applet",
        "cnValue": "Applets",
        "enValue": "Applets"
      },
      {
        "key": "dataflow.message.immutable.modified",
        "cnValue": "Immutable object is modified",
        "enValue": "Immutable object is modified"
      },
      {
        "key": "inspection.redundant.null.check.message",
        "cnValue": "Redundant null-check: {0} is never null",
        "enValue": "Redundant null-check: {0} is never null"
      },
      {
        "key": "inspection.cast.can.be.removed.narrowing.variable.type.message",
        "cnValue": "Cast may be removed by changing the type of ''{0}'' to ''{1}''",
        "enValue": "Cast may be removed by changing the type of ''{0}'' to ''{1}''"
      },
      {
        "key": "inspection.common.if.parts.message.complete.duplicate.side.effect",
        "cnValue": "Collapse 'if' statement and extract side effect",
        "enValue": "Collapse 'if' statement and extract side effect"
      },
      {
        "key": "inspection.redundant.comparator.comparing.message",
        "cnValue": "Unnecessary ''{0}()'' call",
        "enValue": "Unnecessary ''{0}()'' call"
      },
      {
        "key": "inspection.explicit.argument.can.be.lambda.message",
        "cnValue": "Explicit argument can be converted to function",
        "enValue": "Explicit argument can be converted to function"
      },
      {
        "key": "inspection.annotate.overridden.method.and.self.quickfix.family.name",
        "cnValue": "Annotate overridden methods and self",
        "enValue": "Annotate overridden methods and self"
      },
      {
        "key": "dataflow.too.complex.class",
        "cnValue": "Class initializer is too complex to analyze by data flow algorithm",
        "enValue": "Class initializer is too complex to analyze by data flow algorithm"
      },
      {
        "key": "inspection.common.if.parts.message.complete.duplicate",
        "cnValue": "Collapse 'if' statement {0}",
        "enValue": "Collapse 'if' statement {0}"
      },
      {
        "key": "inspection.redundant.type.no.generics.method.reference.problem.descriptor",
        "cnValue": "Type arguments are redundant for the non-generic method reference",
        "enValue": "Type arguments are redundant for the non-generic method reference"
      },
      {
        "key": "inspection.capturing.cleaner.description",
        "cnValue": "Cleaner captures object reference",
        "enValue": "Cleaner captures object reference"
      },
      {
        "key": "redundant.backticks.around.raw.string.literal.display.name",
        "cnValue": "Redundant backticks around raw string literal",
        "enValue": "Redundant backticks around raw string literal"
      },
      {
        "key": "inspection.endless.stream.description",
        "cnValue": "Non-short-circuit operation consumes the infinite stream",
        "enValue": "Non-short-circuit operation consumes the infinite stream"
      },
      {
        "key": "inspection.common.if.parts.family.else.if",
        "cnValue": "Merge 'else if' statement",
        "enValue": "Merge 'else if' statement"
      },
      {
        "key": "inspection.redundant.null.check.always.fail.message",
        "cnValue": "Null-check will always fail: {0} is never null",
        "enValue": "Null-check will always fail: {0} is never null"
      },
      {
        "key": "inspection.fold.expression.into.stream.fix.name",
        "cnValue": "Fold expression into Stream chain",
        "enValue": "Fold expression into Stream chain"
      },
      {
        "key": "inspection.charset.object.can.be.used.fix.family.name",
        "cnValue": "Use Charset constant",
        "enValue": "Use Charset constant"
      },
      {
        "key": "inspection.common.if.parts.message.with.variables.extract",
        "cnValue": "Extract common part with variables from 'if' {0}",
        "enValue": "Extract common part with variables from 'if' {0}"
      },
      {
        "key": "inspection.common.if.parts.message.without.variables.extract",
        "cnValue": "Extract common part from 'if' {0}",
        "enValue": "Extract common part from 'if' {0}"
      },
      {
        "key": "inspection.charset.object.can.be.used.message",
        "cnValue": "{0} can be used instead",
        "enValue": "{0} can be used instead"
      },
      {
        "key": "dataflow.message.immutable.passed",
        "cnValue": "Immutable object is passed where mutable is expected",
        "enValue": "Immutable object is passed where mutable is expected"
      },
      {
        "key": "inspection.reference.jsp.holder.method.anonymous.name",
        "cnValue": "<% page content %>",
        "enValue": "<% page content %>"
      },
      {
        "key": "inspection.common.if.parts.description",
        "cnValue": "'if' statement with common parts",
        "enValue": "'if' statement with common parts"
      },
      {
        "key": "inspection.cast.can.be.removed.narrowing.variable.type.fix.family.name",
        "cnValue": "Change variable type and remove cast",
        "enValue": "Change variable type and remove cast"
      },
      {
        "key": "inspection.wrapper.type.may.be.primitive.name",
        "cnValue": "Type may be primitive",
        "enValue": "Type may be primitive"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids12",
        "cnValue": "Java 12",
        "enValue": "Java 12"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids10",
        "cnValue": "Java 10",
        "enValue": "Java 10"
      },
      {
        "key": "inspection.redundant.stream.optional.call.explanation.parallel.single",
        "cnValue": "stream created from single element will not be parallelized",
        "enValue": "stream created from single element will not be parallelized"
      },
      {
        "key": "inspection.class.getclass.display.name",
        "cnValue": "Class.getClass() call",
        "enValue": "Class.getClass() call"
      },
      {
        "key": "inspection.require.non.null.option.min.size",
        "cnValue": "Minimal delta length when inspection will warn",
        "enValue": "Minimal delta length when inspection will warn"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids9",
        "cnValue": "Java 9",
        "enValue": "Java 9"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids8",
        "cnValue": "Java 8",
        "enValue": "Java 8"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids7",
        "cnValue": "Java 7",
        "enValue": "Java 7"
      },
      {
        "key": "group.names.language.level.specific.issues.and.migration.aids5",
        "cnValue": "Java 5",
        "enValue": "Java 5"
      },
      {
        "key": "dataflow.message.redundant.assignment",
        "cnValue": "Variable is already assigned to this value",
        "enValue": "Variable is already assigned to this value"
      },
      {
        "key": "group.names.xml",
        "cnValue": "XML",
        "enValue": "XML"
      },
      {
        "key": "inspection.duplicates.navigate.to.occurrences",
        "cnValue": "Navigate to occurrences",
        "enValue": "Navigate to occurrences"
      },
      {
        "key": "inspection.redundant.type.no.generics.problem.descriptor",
        "cnValue": "Type arguments are redundant for the non-generic method call",
        "enValue": "Type arguments are redundant for the non-generic method call"
      },
      {
        "key": "inspection.require.non.null.no.warning.replacement.bigger",
        "cnValue": "Don't warn if length of replacement bigger than original",
        "enValue": "Don't warn if length of replacement bigger than original"
      },
      {
        "key": "inspection.redundant.stream.optional.call.explanation.distinct.set",
        "cnValue": "elements will be distinct anyways when collected to the Set",
        "enValue": "elements will be distinct anyways when collected to the Set"
      },
      {
        "key": "inspection.redundant.stream.optional.call.explanation.sorted.twice",
        "cnValue": "stream content is sorted again after that",
        "enValue": "stream content is sorted again after that"
      },
      {
        "key": "inspection.fold.expression.into.string.fix.name",
        "cnValue": "Fold expression into 'String.join'",
        "enValue": "Fold expression into 'String.join'"
      },
      {
        "key": "dataflow.message.storing.array.null",
        "cnValue": "<code>null</code> is stored to an array of @NotNull elements",
        "enValue": "<code>null</code> is stored to an array of @NotNull elements"
      },
      {
        "key": "inspection.explicit.argument.can.be.lambda.fix.name",
        "cnValue": "Use ''{0}'' method with functional argument",
        "enValue": "Use ''{0}'' method with functional argument"
      },
      {
        "key": "inspection.charset.object.can.be.used.fix.name",
        "cnValue": "Replace with ''{0}''",
        "enValue": "Replace with ''{0}''"
      },
      {
        "key": "inspection.conditional.break.in.infinite.loop.description",
        "cnValue": "Conditional break inside infinite loop",
        "enValue": "Conditional break inside infinite loop"
      },
      {
        "key": "inspection.redundant.comparator.comparing.display.name",
        "cnValue": "Redundant Comparator.comparing",
        "enValue": "Redundant Comparator.comparing"
      },
      {
        "key": "inspection.visibility.option.package.private.members",
        "cnValue": "Suggest package-private visibility level for class members",
        "enValue": "Suggest package-private visibility level for class members"
      },
      {
        "key": "inspection.redundant.stream.optional.call.fix.collect.to.ordered.family.name",
        "cnValue": "Collect to 'LinkedHashSet'",
        "enValue": "Collect to 'LinkedHashSet'"
      },
      {
        "key": "inspection.class.getclass.message",
        "cnValue": "'getClass()' is called on Class instance",
        "enValue": "'getClass()' is called on Class instance"
      },
      {
        "key": "inspection.common.if.parts.family",
        "cnValue": "Extract common parts of 'if' statement",
        "enValue": "Extract common parts of 'if' statement"
      },
      {
        "key": "inspection.charset.object.can.be.used.display.name",
        "cnValue": "Standard Charset object can be used",
        "enValue": "Standard Charset object can be used"
      },
      {
        "key": "inspection.common.if.parts.message.variables.only",
        "cnValue": "Extract variables from 'if' {0}",
        "enValue": "Extract variables from 'if' {0}"
      },
      {
        "key": "inspection.suspicious.list.remove.display.name",
        "cnValue": "Suspicious 'List.remove()' in the loop",
        "enValue": "Suspicious 'List.remove()' in the loop"
      },
      {
        "key": "inspection.idempotent.loop.body",
        "cnValue": "Idempotent loop body",
        "enValue": "Idempotent loop body"
      },
      {
        "key": "inspection.redundant.explicit.close",
        "cnValue": "Redundant close",
        "enValue": "Redundant close"
      },
      {
        "key": "inspection.redundant.stream.optional.call.explanation.at.most.one",
        "cnValue": "stream contains at most one element",
        "enValue": "stream contains at most one element"
      },
      {
        "key": "inspection.explicit.argument.can.be.lambda.fix.family.name",
        "cnValue": "Replace explicit argument with function",
        "enValue": "Replace explicit argument with function"
      },
      {
        "key": "inspection.fold.expression.into.stream.display.name",
        "cnValue": "Expression can be folded into Stream chain",
        "enValue": "Expression can be folded into Stream chain"
      },
      {
        "key": "inspection.duplicates.occurrences.view.title",
        "cnValue": "Duplicates for ''{0}''",
        "enValue": "Duplicates for ''{0}''"
      },
      {
        "key": "inspection.conditional.break.in.infinite.loop.no.conversion.with.do.while",
        "cnValue": "Don't suggest to replace with 'do while'",
        "enValue": "Don't suggest to replace with 'do while'"
      },
      {
        "key": "inspection.require.non.null.description",
        "cnValue": "Null check can be replaced with method call",
        "enValue": "Null check can be replaced with method call"
      },
      {
        "key": "inspection.common.if.parts.message.whole.branch",
        "cnValue": "Extract common part removing branch {0}",
        "enValue": "Extract common part removing branch {0}"
      },
      {
        "key": "inspection.optional.get.without.is.present.message",
        "cnValue": "<code>{0}.#ref()</code> without ''isPresent()'' check",
        "enValue": "<code>{0}.#ref()</code> without ''isPresent()'' check"
      },
      {
        "key": "inspection.require.non.null",
        "cnValue": "Replace null check with Objects/Stream static call",
        "enValue": "Replace null check with Objects/Stream static call"
      },
      {
        "key": "inspection.fold.expression.into.string.display.name",
        "cnValue": "Expression can be folded into 'String.join'",
        "enValue": "Expression can be folded into 'String.join'"
      },
      {
        "key": "inspection.undeclared.service.usage.message",
        "cnValue": "Usage of service ''{0}'' is not declared in module-info",
        "enValue": "Usage of service ''{0}'' is not declared in module-info"
      },
      {
        "key": "inspection.tool.in.browser.id.title",
        "cnValue": "ID",
        "enValue": "ID"
      },
      {
        "key": "inspection.dead.code.option.servlet",
        "cnValue": "Servlets",
        "enValue": "Servlets"
      },
      {
        "key": "inspection.javadoc.option.tab.title.module",
        "cnValue": "Module",
        "enValue": "Module"
      },
      {
        "key": "inspection.cast.can.be.removed.narrowing.variable.type.name",
        "cnValue": "Too weak variable type leads to unnecessary cast",
        "enValue": "Too weak variable type leads to unnecessary cast"
      },
      {
        "key": "inspection.cast.can.be.removed.narrowing.variable.type.fix.name",
        "cnValue": "Change type of ''{0}'' to ''{1}'' and remove cast",
        "enValue": "Change type of ''{0}'' to ''{1}'' and remove cast"
      }
    ]
  },
  {
    "path": "/messages/SMTestsRunnerBundle.properties",
    "name": "SMTestsRunnerBundle.properties",
    "props": [
      {
        "key": "sm.test.runner.ui.tabs.statistics.columns.results.count.msg.errors",
        "cnValue": "E:{0}",
        "enValue": "E:{0}"
      },
      {
        "key": "sm.test.runner.ui.tabs.statistics.columns.results.count.msg.passed",
        "cnValue": "P:{0}",
        "enValue": "P:{0}"
      },
      {
        "key": "sm.test.runner.ui.tabs.statistics.columns.results.count.msg.failed",
        "cnValue": "F:{0}",
        "enValue": "F:{0}"
      },
      {
        "key": "sm.test.runner.ui.tabs.statistics.columns.results.count.msg.ignored",
        "cnValue": "I:{0}",
        "enValue": "I:{0}"
      }
    ]
  },
  {
    "path": "/messages/FindBundle.properties",
    "name": "FindBundle.properties",
    "props": [
      {
        "key": "find.context.presentation.scope.label",
        "cnValue": " ({0})",
        "enValue": " ({0})"
      }
    ]
  },
  {
    "path": "/messages/CommonBundle.properties",
    "name": "CommonBundle.properties",
    "props": [
      {
        "key": "button.decline",
        "cnValue": "Decline",
        "enValue": "Decline"
      },
      {
        "key": "format.file.size.kbytes",
        "cnValue": "{0}Kb",
        "enValue": "{0}Kb"
      },
      {
        "key": "socks.proxy.type",
        "cnValue": "SOCKS",
        "enValue": "SOCKS"
      },
      {
        "key": "http.proxy.type",
        "cnValue": "HTTP",
        "enValue": "HTTP"
      },
      {
        "key": "format.file.size.mbytes",
        "cnValue": "{0}Mb",
        "enValue": "{0}Mb"
      },
      {
        "key": "format.file.size.bytes",
        "cnValue": "{0}b",
        "enValue": "{0}b"
      }
    ]
  },
  {
    "path": "/org/jetbrains/lang/manifest/ManifestBundle.properties",
    "name": "ManifestBundle.properties",
    "props": [
      {
        "key": "manifest.header.expected",
        "cnValue": "Header expected",
        "enValue": "Header expected"
      },
      {
        "key": "manifest.colon.expected",
        "cnValue": "':' expected",
        "enValue": "':' expected"
      },
      {
        "key": "manifest.whitespace.expected",
        "cnValue": "Whitespace expected",
        "enValue": "Whitespace expected"
      }
    ]
  },
  {
    "path": "/messages/ActionsBundle.properties",
    "name": "ActionsBundle.properties",
    "props": [
      {
        "key": "action.DelegateMethods.text",
        "cnValue": "_Delegate Methods...",
        "enValue": "_Delegate Methods..."
      },
      {
        "key": "action.ExpandAllToLevel4.text",
        "cnValue": "_4",
        "enValue": "_4"
      },
      {
        "key": "action.ExpandToLevel4.text",
        "cnValue": "_4",
        "enValue": "_4"
      },
      {
        "key": "action.ExpandAllToLevel1.text",
        "cnValue": "_1",
        "enValue": "_1"
      },
      {
        "key": "action.ExpandToLevel1.text",
        "cnValue": "_1",
        "enValue": "_1"
      },
      {
        "key": "action.ExpandAllToLevel3.text",
        "cnValue": "_3",
        "enValue": "_3"
      },
      {
        "key": "action.ExpandToLevel3.text",
        "cnValue": "_3",
        "enValue": "_3"
      },
      {
        "key": "action.GenerateSetter.text",
        "cnValue": "Setter",
        "enValue": "Setter"
      },
      {
        "key": "action.ExpandToLevel5.text",
        "cnValue": "_5",
        "enValue": "_5"
      },
      {
        "key": "action.GenerateGetter.text",
        "cnValue": "Getter",
        "enValue": "Getter"
      },
      {
        "key": "action.GenerateCreateUI.text",
        "cnValue": "createUI(...)",
        "enValue": "createUI(...)"
      },
      {
        "key": "action.ExpandAllToLevel2.text",
        "cnValue": "_2",
        "enValue": "_2"
      },
      {
        "key": "action.ExpandToLevel2.text",
        "cnValue": "_2",
        "enValue": "_2"
      },
      {
        "key": "action.ExpandAllToLevel5.text",
        "cnValue": "_5",
        "enValue": "_5"
      }
    ]
  }
]